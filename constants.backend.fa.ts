import type { SkillLevel } from './types';

export const CAREER_PATH_DATA_BACKEND_FA: SkillLevel[] = [
  {
    level: 1,
    title: "کارآموز / اپرنتیس",
    experience: "۲-۳ ماه",
    goal: "درک مبانی توسعه نرم‌افزار و بک‌اند وب. یادگیری خواندن و نوشتن کدهای پایه، استفاده از ابزارهای ضروری و درک آنچه پشت یک درخواست وب ساده اتفاق می‌افتد.",
    hardSkills: [
        "مبانی اینترنت و شبکه - درخواست/پاسخ: وقتی یک URL را در مرورگر وارد می‌کنید چه اتفاقی می‌افتد",
        "مبانی اینترنت و شبکه - آدرس IP و پورت: درک معنای 127.0.0.1:8000",
        "مبانی اینترنت و شبکه - DNS: نام‌های دامنه چیستند و چگونه ترجمه می‌شوند",
        "مبانی اینترنت و شبکه - HTTP: متدهای پایه: GET, POST؛ کدهای وضعیت 200, 404",
        "اصول توسعه نرم‌افزار - سینتکس و کنترل جریان: if, else, for, while, switch",
        "اصول توسعه نرم‌افزار - متغیرها و انواع: int, string, float, arrays, dictionaries",
        "اصول توسعه نرم‌افزار - توابع: ورودی/خروجی، تعریف کد قابل استفاده مجدد",
        "پایگاه‌های داده - پایگاه داده چیست: چرا داده‌ها را در سیستم‌های ساختاریافته ذخیره می‌کنیم",
        "پایگاه‌های داده - SQL در مقابل NoSQL: سطح بسیار بالا (رابطه‌ای در مقابل مبتنی بر سند)",
        "پایگاه‌های داده - مبانی SQL: SELECT, INSERT, UPDATE, DELETE, WHERE, LIMIT",
        "پایگاه‌های داده - ایجاد اسکما: CREATE TABLE, انواع ستون، محدودیت‌های ساده",
        "گیت (از طریق CLI) - هدف گیت: کنترل نسخه و همکاری تیمی",
        "گیت (از طریق CLI) - مبانی گیت: init, clone, status, add, commit",
        "گیت (از طریق CLI) - .gitignore: چیست و چرا",
        "گیت (از طریق CLI) - لغو تغییرات: checkout, restore, reset (هنوز ریست سخت نه)",
        "گیت (از طریق CLI) - شاخه‌بندی: git branch, git checkout -b",
        "گیت (از طریق CLI) - تاریخچه: git log و درک HEAD",
        "لینوکس - هدف لینوکس: سرورها، محیط‌های توسعه، کانتینرها",
        "لینوکس - CLI پایه: ls, cd, pwd, mkdir, cat, tail, rm, etc.",
        "لینوکس - ویرایش فایل‌ها: nano, vim اختیاری",
        "لینوکس - نصب نرم‌افزار: apt install, yum, package managers",
        "PHP (سطح رویه‌ای) - سینتکس: Echo, if-else, loops",
        "PHP (سطح رویه‌ای) - آرایه‌ها: مبتنی بر ایندکس و انجمنی",
        "PHP (سطح رویه‌ای) - آرایه‌های انجمنی و حلقه‌ها: پیمایش با منطق",
        "PHP (سطح رویه‌ای) - توابع: هدف و استفاده",
        "PHP (سطح رویه‌ای) - سوپرگلوبال‌ها: $_GET, $_POST",
        "مبانی لاراول - لاراول چیست: هدف فریم‌ورک",
        "مبانی لاراول - ساختار: MVC, نمای کلی دایرکتوری",
        "مبانی لاراول - مسیریابی: مسیریابی پایه web.php",
        "مبانی لاراول - مدل‌ها و کنترلرها: تولید و استفاده",
        "مبانی لاراول - Composer: نصب یک پکیج (مثلاً faker)",
    ],
    softSkills: [
      "ارتباطات: پرسیدن سوالات واضح، اشتراک‌گذاری منظم به‌روزرسانی‌های وضعیت",
      "تمایل به یادگیری: پذیرش بازخورد، نشان دادن کنجکاوی",
      "مدیریت زمان: دنبال کردن برنامه و گزارش موانع",
      "آگاهی تیمی: درک اینکه در نقش پشتیبان هستند، نه رهبر",
    ],
    responsibilities: [
      "اصول را یاد می‌گیرد و در کارهای پایه تحت راهنمایی کمک می‌کند.",
    ],
    roadmap: {
      months: [
        "ماه ۱: آشنایی با اینترنت، DNS، HTTP، درخواست-پاسخ",
        "ماه ۱: دستورات پایه لینوکس",
        "ماه ۱: مبانی گیت (commit, branch, log)",
        "ماه ۱: مبانی PHP (سینتکس، متغیرها، حلقه‌ها، توابع)",
        "ماه ۱: SQL: SELECT, WHERE, INSERT",
        "ماه ۲: شاخه‌بندی گیت، .gitignore، بازیابی فایل‌ها",
        "ماه ۲: PHP: آرایه‌ها، توابع، GET/POST",
        "ماه ۲: لاراول: ساختار دایرکتوری، روت‌ها، کنترلرها",
        "ماه ۲: SQL: UPDATE, DELETE, JOIN ساده",
        "ماه ۲: لینوکس: ویرایش فایل، نصب پکیج",
        "ماه ۲: HTTP عمیق‌تر (کدهای وضعیت، هدرها)",
        "ماه ۳: شروع یک پروژه آزمایشی",
        "ماه ۳: آزمودن تکنیک‌های یادگرفته شده در سناریوی واقعی",
        "ماه ۳: تلاش برای درک منطق کسب‌وکار و پیاده‌سازی",
      ],
      goals: ["تمرین پیشنهادی: ساخت یک اپلیکیشن پایه برای لیست کردن دانشجویان (PHP)، با روت‌های لاراول، ذخیره در MySQL و کنترل نسخه پروژه با گیت"]
    },
    practicalTasks: [
        "؟ توسعه نرم‌افزار: تابعی بنویسید که حروف صدادار یک رشته را بشمارد",
        "؟ پایگاه داده: یک کوئری SQL بنویسید تا نام تمام کاربران بالای ۱۸ سال را دریافت کند",
        "؟ گیت: یک شاخه feature بسازید، تغییری را با پیام مناسب commit کنید، لاگ گیت خود را نمایش دهید",
        "؟ لینوکس: به یک پوشه بروید، یک فایل بسازید، با nano در آن بنویسید، سپس محتوای آن را بخوانید",
        "؟ PHP: اسکریپتی بنویسید که یک پارامتر GET را بپذیرد و یک خوش‌آمدگویی چاپ کند",
        "؟ لاراول: یک روت بسازید که یک رشته استاتیک برگرداند، سپس یک کنترلر که همان را برگرداند",
    ],
    timeEstimate: { fullTime: "۳ ماه", partTime: "۴-۵ ماه" },
  },
    {
    level: 2,
    title: "جونیور ۱",
    experience: "۳-۴ ماه",
    goal: "توانایی ساخت مستقل ویژگی‌های ساده بک‌اند با نیازمندی‌های مشخص، استفاده مستقل از گیت و پایگاه داده، درک HTTP و طراحی پایه اپلیکیشن وب و نوشتن کدهای قابل نگهداری تحت نظارت.",
    hardSkills: [
        "اینترنت و HTTP - متدهای HTTP: درک چرخه کامل CRUD (GET, POST, PUT, DELETE)",
        "اینترنت و HTTP - کدهای وضعیت: آشنایی با 200, 201, 204, 400, 401, 403, 404, 500",
        "اینترنت و HTTP - هدرها و بدنه: درک content-type, authorization, etc.",
        "اینترنت و HTTP - چرخه حیات درخواست: از مرورگر به کنترلر، به پایگاه داده، و بازگشت",
        "توسعه نرم‌افزار - سازماندهی کد: آشنایی با ساختار کد قابل استفاده مجدد (تقسیم فایل‌ها، ماژول‌ها)",
        "توسعه نرم‌افزار - مدیریت خطا: Try/catch, اعتبارسنجی ورودی، مبانی دیباگینگ",
        "توسعه نرم‌افزار - اعتبارسنجی داده: دستی و با پشتیبانی فریم‌ورک (مثلاً اعتبارسنجی لاراول)",
        "توسعه نرم‌افزار - ساختار پاسخ API: پاسخ‌های JSON، پیام‌های خطا، کدهای وضعیت",
        "ساختمان داده و الگوریتم - آرایه‌ها/لیست‌ها: استفاده، ایندکس‌گذاری، پیمایش ساده",
        "ساختمان داده و الگوریتم - هش‌مپ‌ها: آرایه‌های انجمنی، جستجوی کلید-مقدار در PHP",
        "ساختمان داده و الگوریتم - پشته‌ها/صف‌ها: آگاهی؛ موارد استفاده پایه در کد",
        "ساختمان داده و الگوریتم - مرتب‌سازی/جستجو: مرتب‌سازی حبابی، جستجوی خطی/دودویی (مفاهیم)",
        "ساختمان داده و الگوریتم - مبانی Big O: O(1), O(n) — معنای آنها در کد",
        "پایگاه داده - Joins: INNER JOIN, LEFT JOIN",
        "پایگاه داده - روابط: یک-به-چند و چند-به-چند (سطح مفهومی)",
        "پایگاه داده - فیلتر کردن کوئری: WHERE, LIKE, ORDER BY, LIMIT/OFFSET",
        "پایگاه داده - ایندکس‌ها (آشنایی سبک): چیستند و چه زمانی کمک می‌کنند",
        "پایگاه داده - مبانی کوئری بیلدر: سینتکس DB::table()->where()->get() لاراول",
        "پایگاه داده - NoSQL (آشنایی): MongoDB: ساختار سند، کوئری‌های پایه، موارد استفاده، آشنایی با استک ELK",
        "گیت (CLI متوسط) - گردش کار شاخه‌بندی: شاخه Feature، rebase در مقابل merge (آشنایی)",
        "گیت (CLI متوسط) - Stashing: git stash، چه زمانی و چگونه استفاده شود",
        "گیت (CLI متوسط) - حل تعارض: حل دستی و استدلال تعارض merge",
        "گیت (CLI متوسط) - تگ‌ها و نسخه‌ها: چگونه نسخه‌ها را تگ کنیم و چرا مهم است",
        "گیت (CLI متوسط) - Cherry-pick (اختیاری): فقط برای موارد خاص، ایده پایه",
        "لینوکس - مجوزها: chmod, chown, حقوق اجرایی",
        "لینوکس - وظایف پس‌زمینه: &, nohup, ps, kill",
        "لینوکس - مبانی اسکریپت‌نویسی شل: نوشتن یک اسکریپت .sh ساده برای خودکارسازی چیزی",
        "PHP - کار با رشته‌ها: explode, implode, substr, str_replace",
        "PHP - مدیریت فرم: اعتبارسنجی و پردازش ورودی فرم",
        "PHP - مبانی آپلود فایل: درک $_FILES، پوشه‌های ذخیره‌سازی",
        "لاراول - روت‌ها (نام‌گذاری شده و پارامتری): Route::get('/user/{id}')",
        "لاراول - کنترلرها: بازگرداندن JSON، تعامل با مدل‌ها",
        "لاراول - مبانی Blade: تمپلیت‌سازی ساده، حلقه‌ها، ifها، includeها",
        "لاراول - اعتبارسنجی درخواست: استفاده از FormRequest یا متد validate()",
        "لاراول - مبانی Eloquent: عملیات CRUD با استفاده از مدل‌ها",
        "ارتباطات سرویس - REST: اصول اصلی، افعال، کدهای وضعیت",
        "ارتباطات سرویس - JSON: فرمت تبادل داده، سریال‌سازی پایه",
        "ارتباطات سرویس - HTTP: مدل درخواست/پاسخ، هدرها، متد",
    ],
    softSkills: [
        "مالکیت وظیفه: تمام کردن کار محول شده با کمک، درخواست شفاف‌سازی",
        "ارتباطات: پرسیدن فعالانه هنگام گیر افتادن، توضیح پیشرفت یا موانع",
        "مسئولیت‌پذیری: پیروی از قراردادهای کدنویسی پایه، بازبینی کد خود قبل از درخواست بازخورد",
        "کنجکاوی: شروع به پرسیدن 'چرا' کارها به این شکل کار می‌کنند",
        "بازخورد: دریافت و اعمال بازخورد با احترام و دقت",
    ],
    responsibilities: [
        "به طور مستقل روی وظایف ساده با نظارت و بازخورد کار می‌کند.",
    ],
    roadmap: {
      months: [
        "ماه ۱: بهبود دانش چرخه حیات HTTP و کدهای وضعیت",
        "ماه ۱: تعمیق دانش گیت: شاخه‌بندی، merge، و بازرسی لاگ",
        "ماه ۱: یادگیری اعتبارسنجی فرم و روت‌های POST در لاراول",
        "ماه ۱: درک کوئری‌های ساده Eloquent و کنترلرهای CRUD",
        "ماه‌های ۲-۳: مفاهیم پایگاه داده رابطه‌ای: joins, relationships",
        "ماه‌های ۲-۳: نوشتن روت‌ها با پارامترها و اعتبارسنجی",
        "ماه‌های ۲-۳: کار روی یک پروژه کوچک (مثلاً وبلاگ یا مدیر وظایف)",
        "ماه‌های ۲-۳: یادگیری استقرار یک اپلیکیشن لاراول به صورت محلی با .env و SQLite یا MySQL",
        "ماه ۴ (اختیاری): آشنایی با APIها: ساختار JSON، فرمت‌های پاسخ، صفحه‌بندی",
        "ماه ۴ (اختیاری): مشارکت در یک ویژگی کوچک در یک پروژه تیمی (تحت راهنمایی)",
        "ماه ۴ (اختیاری): نوشتن یک اسکریپت شل کوتاه برای خودکارسازی راه‌اندازی توسعه یا پشتیبان‌گیری",
      ],
      goals: ["زمان مناسب برای مربی‌گری، اعتماد به نفس‌سازی و مشارکت‌های جزئی در ویژگی‌ها را فراهم می‌کند."]
    },
    practicalTasks: [
        "یک API بنویسید که شناسه کاربری دریافت کند و نام او را از پایگاه داده برگرداند",
        "کوئری Join که تمام پست‌ها را با نام کاربر برمی‌گرداند",
        "یک شاخه feature بسازید، یک وظیفه را حل کنید و یک درخواست merge ایجاد کنید",
        "یک فرم را مدیریت کنید، ورودی را اعتبارسنجی کنید، آن را در پایگاه داده ذخیره کنید و تأییدیه نمایش دهید",
        "یک اسکریپت bash پایه برای پشتیبان‌گیری از یک پوشه بنویسید",
    ],
    quizzes: [
        "تفاوت بین INNER JOIN و LEFT JOIN چیست؟",
        "اگر در گیت یک تعارض merge رخ دهد چه اتفاقی می‌افتد؟ چگونه آن را حل می‌کنید؟",
        "کد وضعیت HTTP 403 به چه معناست؟ چه زمانی آن را برمی‌گردانید؟",
        "CSRF چیست و لاراول چگونه آن را مدیریت می‌کند؟",
    ],
    timeEstimate: { fullTime: "۴ ماه", partTime: "۶ ماه" },
  },
  {
    level: 3,
    title: "جونیور ۲",
    experience: "۴-۵ ماه",
    goal: "تحویل مستقل ویژگی‌های کوچک بک‌اند، درک کامل چرخه حیات درخواست، نوشتن تست‌های پایه و شروع به شکل‌دهی عادات کدنویسی تمیز، طراحی ساده و مدیریت خطا. توانایی گرفتن یک تسک از مشخصات تا درخواست merge با بازبینی.",
    hardSkills: [
        "جریان HTTP و وب اپلیکیشن - چرخه حیات درخواست: درک عمیق: روت → کنترلر → مدل → پایگاه داده → پاسخ",
        "جریان HTTP و وب اپلیکیشن - استانداردهای REST: APIهای مبتنی بر منابع، افعال و هم‌ترازی کد وضعیت",
        "جریان HTTP و وب اپلیکیشن - هدرها: Authorization, Content-Type, Accept",
        "جریان HTTP و وب اپلیکیشن - صفحه‌بندی: پیاده‌سازی پایه با استفاده از لاراول (paginate() یا offset/limit دستی)",
        "توسعه نرم‌افزار - مبانی کد تمیز: نام‌گذاری، کامنت‌ها، ساختار، اجتناب از تکرار",
        "توسعه نرم‌افزار - قابلیت استفاده مجدد: اصول DRY، استخراج هلپرها و سرویس‌ها",
        "توسعه نرم‌افزار - مدیریت خطا: پیام‌های خطای معنادار، مبانی لاگ‌گیری",
        "توسعه نرم‌افزار - دیباگینگ: دیباگر لاراول، dd(), dump(), خواندن stack trace پایه",
        "ساختمان داده و الگوریتم - آرایه‌ها/لیست‌ها: پیمایش، جستجو، متدهای داخلی در PHP/Python",
        "ساختمان داده و الگوریتم - هش‌مپ‌ها: دیکشنری/آرایه انجمنی، عملیات set",
        "ساختمان داده و الگوریتم - پشته‌ها/صف‌ها: استفاده در تجزیه، زمان‌بندی، BFS/DFS (آگاهی)",
        "ساختمان داده و الگوریتم - الگوریتم‌های مرتب‌سازی: انتخاب، درج، مرتب‌سازی داخلی، پایداری",
        "ساختمان داده و الگوریتم - پیچیدگی زمانی: O(1), O(n), O(log n)، پیامدهای دنیای واقعی",
        "ساختمان داده و الگوریتم - حل مسئله: Leetcode/HackerRank: چالش‌های آسان-متوسط",
        "پایگاه داده - بهینه‌سازی کوئری: EXPLAIN, LIMIT, استفاده عملی از ایندکس‌ها",
        "پایگاه داده - انواع داده: انتخاب انواع و طول‌های مناسب",
        "پایگاه داده - استفاده از روابط: Eloquent: hasMany, belongsTo, with(), eager loading",
        "پایگاه داده - مایگریشن‌ها: ایجاد/به‌روزرسانی مایگریشن‌ها، ستون‌های nullable/default/unique",
        "پایگاه داده و پیام‌رسانی - مبانی پایگاه داده رابطه‌ای: جداول، سطرها، ستون‌ها، SQL پایه (SELECT/INSERT/UPDATE/DELETE)",
        "پایگاه داده و پیام‌رسانی - طراحی اسکما: کلیدهای اصلی، کلیدهای خارجی، نرمال‌سازی (آشنایی)",
        "پایگاه داده و پیام‌رسانی - ایندکس‌ها (آشنایی): ایندکس چیست، چرا از آن استفاده کنیم",
        "پایگاه داده و پیام‌رسانی - joinهای ساده: مبانی INNER JOIN, LEFT JOIN",
        "پایگاه داده و پیام‌رسانی - Redis: یک key-value store در حافظه چیست، کشینگ",
        "پایگاه داده و پیام‌رسانی - پیام‌رسانی (آگاهی): صف پیام چیست، مورد استفاده ساده",
        "پایگاه داده و پیام‌رسانی - پایگاه‌های داده جستجو: Elasticsearch: Aggregations (terms, sum, cardinality), Querying (bool, wildcard query) و Sorting",
        "گیت - گردش کار PR: باز کردن MR/PR، نوشتن توضیحات واضح، پیروی از تمپلیت",
        "گیت - Rebase در مقابل Merge: درک هر دو (نیازی به استادی در rebase هنوز نیست)",
        "گیت - آداب GitHub/GitLab: کامنت گذاشتن، تخصیص دادن، بازبینی PRهای پایه",
        "لینوکس و CLI - اسکریپت‌نویسی Bash: خواندن/نوشتن یک فایل .sh برای خودکارسازی راه‌اندازی برنامه",
        "لینوکس و CLI - Crontab: راه‌اندازی یک وظیفه زمان‌بندی شده پایه",
        "لینوکس و CLI - مجوزهای فایل: درک 755 در مقابل 644، و غیره.",
        "PHP - Form requests: استفاده از آبجکت‌های اعتبارسنجی لاراول",
        "PHP - منطق آپلود فایل: ذخیره در دیسک، ذخیره مسیر فایل در پایگاه داده",
        "PHP - احراز هویت: Laravel Breeze/Jetstream یا لاگین دستی با session",
        "PHP - هلپرها: توابع هلپر سفارشی برای قالب‌بندی و استفاده مجدد منطق",
        "لاراول - Middleware: چه کار می‌کنند، چگونه موارد سفارشی را ثبت کنیم",
        "لاراول - Service Container: تزریق وابستگی، ServiceContainer",
        "لاراول - روابط Eloquent: چرخه کامل: تعریف → استفاده → کوئری با with(), Lazy loading و eager loading",
        "لاراول - اعتبارسنجی: Required, regex, sometimes, پیام‌های سفارشی",
        "لاراول - لایه سرویس: آشنایی با استفاده از سرویس‌ها به جای کنترلرهای چاق",
        "لاراول - دستورات Artisan: نوشتن دستورات سفارشی برای اتوماسیون",
        "لاراول - Config & env: راه‌اندازی چند محیطی، استفاده از .env, config()",
        "لاراول - کامپوننت‌های Blade: تمپلیت‌سازی تمیز برای UI ماژولار (در صورت نیاز)",
        "ارتباطات سرویس - REST: طراحی منابع، idempotent بودن، کدهای وضعیت",
        "ارتباطات سرویس - GraphQL: آگاهی، مفهوم query/mutation",
        "ارتباطات سرویس - WebSockets: ارتباطات Real-time (آشنایی)",
    ],
    softSkills: [
        "تخمین زمان: شروع به تخمین مدت زمان وظایف (با راهنمایی)",
        "همکاری: می‌تواند در بحث‌های تیمی و بازبینی کد شرکت کند",
        "شفافیت: شروع به نوشتن کامنت‌ها و پیام‌های commit واضح‌تر می‌کند",
        "قابلیت اطمینان: تحویل مداوم‌تر وظایف کوچک",
        "پاسخگویی: از اشتباهات یاد می‌گیرد و وظایف محول شده را به عهده می‌گیرد",
    ],
    responsibilities: [
        "ویژگی‌های کوچک را مدیریت می‌کند، تحویل قابل اعتمادی نشان می‌دهد، کار مستقل را آغاز می‌کند.",
    ],
    roadmap: {
      months: [
        "ماه ۱: مفاهیم RESTful، مسیریابی تمیز، پیام‌های خطای بهتر",
        "ماه ۱: صفحه‌بندی پایه، فیلترها، کوئری بیلدرها",
        "ماه ۱: روابط Eloquent و eager loading",
        "ماه ۲: Form requests و قوانین اعتبارسنجی سفارشی",
        "ماه ۲: مدیریت فایل با لاراول و ذخیره آپلودها",
        "ماه ۲: نوشتن کلاس‌های هلپر و سرویس برای استفاده مجدد",
        "ماه ۲: شروع به استفاده از cron و اسکریپت‌های bash",
        "ماه‌های ۳-۴: پاکسازی کد، نام‌گذاری بهتر، استفاده مداوم از گیت",
        "ماه‌های ۳-۴: کار با تیم از طریق PRهای کوچک، با بازبینی کد",
        "ماه‌های ۳-۴: بهبود عملکرد SQL با EXPLAIN و ایندکس‌ها",
        "ماه‌های ۳-۴: سیستم احراز هویت با استفاده از Laravel Breeze (یا مبتنی بر session پایه)",
      ],
      goals: ["پروژه پیشنهادی: یک اپلیکیشن todo کوچک با احراز هویت، روابط (مثلاً task -> category)، آپلود فایل و صفحه‌بندی."]
    },
    practicalTasks: [
        "یک API برای مدیریت وظایف، با فیلتر کردن و صفحه‌بندی ایجاد کنید",
        "یک فرم را اعتبارسنجی کرده و خطاهای معنادار و پیام‌های موفقیت را برگردانید",
        "یک مایگریشن و مدل برای یک رابطه یک-به-چند ایجاد کنید",
        "یک ویژگی بنویسید که فایل‌ها را آپلود کرده و نام فایل را در پایگاه داده لاگ کند",
        "یک کلاس هلپر یا سرویس قابل استفاده مجدد ایجاد کنید (مثلاً یک لاگر یا فرمتر)",
        "یک وظیفه crontab ساده برای پشتیبان‌گیری از لاگ‌ها یا پایگاه داده راه‌اندازی کنید",
    ],
    quizzes: [
        "تفاوت بین merge و rebase در گیت چیست؟",
        "چرا یک رابطه را در لاراول eager-load می‌کنید؟",
        "هدف middleware در فریم‌ورک‌های وب چیست؟",
        "مثالی از نقض DRY در یک کنترلر لاراول بزنید.",
    ],
    timeEstimate: { fullTime: "۴-۵ ماه", partTime: "۶-۷ ماه" },
  },
  {
    level: 4,
    title: "مید-لول ۱",
    experience: "۵-۷ ماه",
    goal: "ساخت، تست و تحویل مستقل ویژگی‌های بک‌اند با پیچیدگی متوسط. شروع به استفاده از تفکر معماری، گردش کارهای ناهمزمان، بهینه‌سازی عملکرد و مشارکت در قابلیت نگهداری کدبیس‌ها.",
    hardSkills: [
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - استانداردهای RESTful: متدهای Idempotent، بهترین شیوه‌های طراحی روت",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - ماژولارسازی: ایجاد سرویس‌ها، کامپوننت‌های قابل استفاده مجدد",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - چرخه حیات درخواست (فول استک): ردیابی جریان از HTTP به پایگاه داده و بازگشت",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - کشینگ: چه زمانی استفاده شود، انواع (پایگاه داده، حافظه، فایل)",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - محدودیت نرخ: آشنایی مفهومی + middleware لاراول",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - صف‌بندی: وظایف پس‌زمینه با استفاده از صف‌ها/کارگرها",
        "پایگاه داده و پیام‌رسانی - پایگاه‌های داده رابطه‌ای: PostgreSQL, MySQL: تکامل اسکما، محدودیت‌ها، تراکنش‌ها",
        "پایگاه داده و پیام‌رسانی - پایگاه‌های داده جستجو: Elasticsearch: تجمعات پیچیده، Search after, more_like_this, msearch",
        "پایگاه داده و پیام‌رسانی - استراتژی‌های ایندکس‌گذاری: B-Tree, Hash indexes, covering indexes, کی و چگونه استفاده شود",
        "پایگاه داده و پیام‌رسانی - بهینه‌سازی کوئری: مبانی EXPLAIN، شناسایی کوئری کند، بهترین شیوه‌های کوئری بیلدر",
        "پایگاه داده و پیام‌رسانی - قفل‌گذاری جدول/سطر: آگاهی، موارد استفاده پایه، deadlockها",
        "پایگاه داده و پیام‌رسانی - استفاده از Redis: pub/sub ساده، پایداری داده",
        "پایگاه داده و پیام‌رسانی - سیستم‌های پیام‌رسانی: RabbitMQ (مبانی): صف‌ها، تولیدکنندگان، مصرف‌کنندگان",
        "PHP / لاراول (استفاده پیشرفته) - صف‌ها: راه‌اندازی با درایور دیتابیس یا redis، جاب‌ها، dispatch()",
        "PHP / لاراول (استفاده پیشرفته) - رویدادها و شنوندگان: تعریف، اتصال، ارسال و مدیریت ناهمزمان",
        "PHP / لاراول (استفاده پیشرفته) - Gates & Policies: احراز هویت مبتنی بر نقش و سفارشی",
        "PHP / لاراول (استفاده پیشرفته) - Service Providers: ثبت bindings و پکیج‌های bootstrapping",
        "PHP / لاراول (استفاده پیشرفته) - عملکرد Eloquent: مدیریت مجموعه داده‌های بزرگ، chunking، صفحه‌بندی مبتنی بر cursor",
        "PHP / لاراول (استفاده پیشرفته) - کشینگ: Cache::put(), remember(), tags",
        "PHP / لاراول (استفاده پیشرفته) - Filesystem: کار با Storage, visibility, دیسک‌های راه دور",
        "PHP / لاراول (استفاده پیشرفته) - منابع API: سفارشی‌سازی ساختار خروجی برای پاسخ‌های API",
        "PHP / لاراول (استفاده پیشرفته) - Eloquent پیشرفته: Scopes, Accessors, Mutators, casting, relationships",
        "PHP / لاراول (استفاده پیشرفته) - تست: تست‌های Unit و Feature با استفاده از php artisan test",
        "PHP / لاراول (استفاده پیشرفته) - چرخه حیات: کانتینر IOC لاراول",
        "PHP / لاراول (استفاده پیشرفته) - پکیج‌های محبوب: Sanctum, Passport and Horizon",
        "پایتون (سطح مقدماتی) - سینتکس و ساختارها: توابع، حلقه‌ها، دیکشنری‌ها، لیست‌ها",
        "پایتون (سطح مقدماتی) - Virtualenv & pip: مدیریت محیط و نصب وابستگی‌ها",
        "پایتون (سطح مقدماتی) - OOP: درک مبانی OOP در پایتون",
        "پایتون (سطح مقدماتی) - آشنایی با Flask: روت، درخواست/پاسخ، بازگرداندن JSON",
        "پایتون (سطح مقدماتی) - آشنایی با FastAPI: مدل‌های Pydantic، پارامترهای مسیر، مستندات خودکار",
        "پایتون (سطح مقدماتی) - مبانی Celery: وظایف، پردازش ناهمزمان (برای مقایسه با صف لاراول)",
        "پایتون (سطح مقدماتی) - Pandas & NumPy: استفاده پایه (خواندن داده، تحلیل مجموعه داده کوچک)",
        "طراحی سیستم و معماری - اصول کد تمیز: SRP, DRY, KISS, نام‌گذاری، کامنت‌های کد",
        "طراحی سیستم و معماری - معماری لایه‌ای: Controllers → Services → Repos",
        "طراحی سیستم و معماری - تزریق وابستگی: مثال‌های لاراول + پایتون",
        "طراحی سیستم و معماری - طراحی ماژولار: جداسازی ویژگی‌ها/دامنه‌ها (پکیج‌ها، providerها)",
        "طراحی سیستم و معماری - محدودیت نرخ و throttling: بهترین شیوه‌های لاراول + API",
        "DevOps و محیط - داکر: ایجاد Dockerfile، استفاده از docker-compose با لاراول یا فلسک",
        "DevOps و محیط - CI (پایه): GitHub Actions یا GitLab CI: اجرای تست‌ها، lint، فرمت",
        "DevOps و محیط - کانفیگ‌های محیط: آگاهی از محیط‌های مختلف (تست، تولید، staging و غیره)",
        "DevOps و محیط - دستورات Artisan و مدیریت: خودکارسازی پاکسازی، seeding، زمان‌بندی",
        "اینترنت / HTTPS / پراکسی - HTTPS & SSL: TLS چیست، چرا HTTPS مهم است",
        "اینترنت / HTTPS / پراکسی - خاتمه SSL: مبانی راه‌اندازی گواهینامه (Let's Encrypt, self-signed)",
        "اینترنت / HTTPS / پراکسی - NGINX به عنوان پراکسی معکوس: کانفیگ پایه NGINX: routing, proxy_pass",
        "اینترنت / HTTPS / پراکسی - محتوای استاتیک در مقابل داینامیک: جداسازی و کشینگ در پراکسی‌های معکوس",
        "گیت و همکاری تیمی - بازبینی Pull Requests: خواندن، کامنت گذاشتن، پیشنهاد دادن، تأیید با بازخورد",
        "گیت و همکاری تیمی - استراتژی Rebase: rebase کردن امن، squashing، سیاست merge commit",
        "گیت و همکاری تیمی - بهداشت کامیت: شکستن کامیت‌ها، نوشتن پیام‌های واضح",
        "گیت و همکاری تیمی - نام‌گذاری و قراردادهای شاخه: نام‌گذاری مبتنی بر Feature/task",
        "ساختمان داده و الگوریتم - درخت‌ها: پیمایش، داده‌های سلسله مراتبی، بازگشت",
        "ساختمان داده و الگوریتم - گراف‌ها: اتصال، چرخه‌ها، BFS/DFS، مدل‌سازی دنیای واقعی",
        "ساختمان داده و الگوریتم - الگوریتم‌های کشینگ: LRU, TTL, الگوهای ابطال کش",
        "ساختمان داده و الگوریتم - طراحی الگوریتمی: بازگشت، تقسیم و غلبه، DP (آگاهی)",
        "ساختمان داده و الگوریتم - تحلیل پیچیدگی: بده‌بستان‌های فضا/زمان، مقیاس‌پذیری",
        "ساختمان داده و الگوریتم - حل مسئله: چالش‌های Medium Leetcode/سناریوی سیستم واقعی",
        "ارتباطات سرویس - REST: طراحی پیشرفته، نسخه‌بندی، hypermedia",
        "ارتباطات سرویس - GraphQL: پیاده‌سازی اندپوینت‌های ساده، مشکل N+1، بهینه‌سازی کوئری",
        "ارتباطات سرویس - WebSockets: Pub/sub, مقیاس‌پذیری، رویدادهای real-time",
        "همکاری فرانت‌اند و طراحی API - قابلیت استفاده API: طراحی اندپوینت‌های REST/GraphQL برای سهولت فرانت‌اند، نسخه‌بندی و مدیریت خطا",
        "همکاری فرانت‌اند و طراحی API - الگوی BFF (آگاهی): درک و پشتیبانی از راه‌حل‌های Backend for Frontend",
        "همکاری فرانت‌اند و طراحی API - جریان‌های CORS و احراز هویت: پیاده‌سازی اشتراک‌گذاری منابع بین مبدأ امن و احراز هویت مبتنی بر توکن",
        "همکاری فرانت‌اند و طراحی API - عملکرد: هماهنگی کشینگ، صفحه‌بندی و شکل‌دهی داده برای مصرف فرانت‌اند",
        "همکاری فرانت‌اند و طراحی API - مستندسازی API: OpenAPI/Swagger, قراردادهای پاسخ واضح",
        "همکاری فرانت‌اند و طراحی API - بازبینی بین تیمی: شرکت در بازبینی‌های API با توسعه‌دهندگان فرانت‌اند",
    ],
    softSkills: [
        "یادگیری بین رشته‌ای: جابجایی بین PHP و پایتون بدون ترس",
        "آگاهی معماری: پرسیدن 'آیا این مقیاس‌پذیر است؟ قابل استفاده مجدد است؟'",
        "همکاری: دادن و گرفتن بازخورد PR معنادار",
        "اولویت‌بندی: تعادل بین کد تمیز و تحویل به موقع",
        "خود-بازبینی: تست و بازبینی منظم کار خود قبل از PR",
    ],
    responsibilities: [
        "ویژگی‌های متوسط را تحویل می‌دهد، سیستم‌های اصلی را می‌فهمد، فعالانه همکاری می‌کند.",
    ],
    roadmap: {
      months: [
        "ماه ۱: یادگیری صف‌ها، رویدادها، جاب‌های لاراول",
        "ماه ۱: شروع کار با پایتون: سینتکس، فلسک، virtualenv",
        "ماه ۱: خواندن/نوشتن کلاس‌های سرویس و service providerهای سفارشی لاراول",
        "ماه ۱: نوشتن تست‌های واحد با phpunit",
        "ماه ۲: شروع استفاده از داکر برای پروژه‌های محلی لاراول و فلسک",
        "ماه ۲: یادگیری مبانی Pandas (مثلاً تحلیل داده CSV)",
        "ماه ۲: استفاده از gates/policies لاراول برای کنترل دسترسی",
        "ماه ۲: کار با کشینگ لاراول و ایندکس‌گذاری پایگاه داده",
        "ماه ۳: نوشتن یک کانفیگ NGINX برای پراکسی کردن لاراول/FastAPI پشت HTTPS",
        "ماه ۳: ساخت و تست یک سرویس ماژولار لاراول (ویژگی‌ها/دامنه‌های جدا شده)",
        "ماه ۳: راه‌اندازی یک پایپ‌لاین CI پایه GitHub Actions (lint + test)",
        "ماه ۴ (اختیاری): کاوش Celery با FastAPI",
        "ماه ۴ (اختیاری): افزودن اعتبارسنجی Pydantic ساده و مستندسازی به FastAPI",
        "ماه ۴ (اختیاری): استفاده از event listenerهای لاراول برای نوتیفیکیشن‌ها/ایمیل‌ها",
        "ماه ۴ (اختیاری): افزودن کشینگ با انقضا و ابطال",
      ],
      goals: []
    },
    practicalTasks: [
        "یک ماژول جدید برای مدیریت وظایف با Eloquent، policies و events ایجاد کنید",
        "یک پردازشگر تصویر مبتنی بر صف با جاب‌های لاراول بسازید",
        "یک سرویس پایه فلسک یا FastAPI بنویسید و تست کنید",
        "یک اپلیکیشن داکرایز شده لاراول با مدیریت .env بسازید",
        "NGINX را برای مسیریابی به API لاراول و سرو کردن یک فرانت‌اند استاتیک راه‌اندازی کنید",
        "یک Feature Test بنویسید که یک جریان کاری را پوشش دهد (مثلاً ثبت‌نام + ورود + ایجاد وظیفه)",
    ],
    quizzes: [
        "مزایا و معایب استفاده از صف‌ها چیست؟",
        "متد bind() در یک Service Provider لاراول چه کاری انجام می‌دهد؟",
        "تفاوت بین صف‌های Celery و لاراول چیست؟",
        "FastAPI چگونه درخواست‌های ورودی را اعتبارسنجی می‌کند؟",
        "docker-compose up --build چه کاری انجام می‌دهد؟",
    ],
    timeEstimate: { fullTime: "۵-۶ ماه", partTime: "۷-۹ ماه" },
  },
  {
    level: 5,
    title: "مید-لول ۲",
    experience: "۵-۷ ماه",
    goal: "مالکیت ویژگی‌ها و زیرسیستم‌های پیچیده به صورت سرتاسری. داشتن ایده خوب در مورد معماری و مقیاس‌پذیری در پروژه‌ها. شروع به منتورینگ سایر توسعه‌دهندگان در تیم. تجربه در مشارکت در پروژه‌های بسیار مقیاس‌پذیر.",
    hardSkills: [
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - نسخه‌بندی API: استراتژی‌ها برای سازگاری عقب‌رو، سیاست‌های منسوخ‌سازی",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - ماژولارسازی پیشرفته: طراحی مبتنی بر پلاگین/دامنه، پکیج‌های قابل استفاده مجدد",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - معماری رویداد-محور: ساخت با رویدادها، جداسازی، جریان‌های ناهمزمان",
        "پایگاه داده و پیام‌رسانی - SQL پیشرفته: توابع پنجره‌ای، CTEs، joinهای پیچیده، تراکنش‌ها",
        "پایگاه داده و پیام‌رسانی - NoSQL: MongoDB: ایندکس‌ها، aggregation، مبانی replication",
        "پایگاه داده و پیام‌رسانی - Elasticsearch: Mapping, indexing, querying, aggregations (nested aggs)",
        "پایگاه داده و پیام‌رسانی - استراتژی‌های ایندکس‌گذاری: ایندکس‌های مرکب، جزئی، full-text، پوششی، نگهداری ایندکس",
        "پایگاه داده و پیام‌رسانی - مدل‌های سازگاری: سازگاری قوی/نهایی، قضیه CAP (آشنایی)",
        "پایگاه داده و پیام‌رسانی - Redis (پیشرفته): ساختارهای داده (sets, sorted sets), pub/sub, expiry",
        "پایگاه داده و پیام‌رسانی - پیام‌رسانی: RabbitMQ: exchanges, routing",
        "PHP / لاراول (استادی پیشرفته) - صف‌های پیشرفته: جاب‌های زنجیره‌ای، batching جاب، مانیتورینگ صف",
        "PHP / لاراول (استادی پیشرفته) - Broadcasting & WebSockets: رویدادهای Real-time با Laravel Echo, Pusher, or Socket.IO",
        "PHP / لاراول (استادی پیشرفته) - الگوی Observer: آبزروهای مدل برای حسابرسی، نوتیفیکیشن‌ها",
        "PHP / لاراول (استادی پیشرفته) - ساختار برنامه ماژولار: دامنه‌ها، پکیج‌ها، مرزهای سرویس",
        "PHP / لاراول (استادی پیشرفته) - مایگریشن‌های پیشرفته: استقرارهای بدون قطعی، اسکریپت‌های مهاجرت داده",
        "PHP / لاراول (استادی پیشرفته) - بهینه‌سازی عملکرد: کش کوئری، Redis، کش کانفیگ",
        "پایتون (استفاده پیشرفته) - برنامه‌نویسی ناهمزمان: asyncio, اندپوینت‌های async Flask/FastAPI, وظایف پس‌زمینه",
        "پایتون (استفاده پیشرفته) - تزریق وابستگی: Depends FastAPI، فریم‌ورک‌های DI سفارشی",
        "پایتون (استفاده پیشرفته) - مستندات و نسخه‌بندی API: OpenAPI/Swagger, مستندسازی APIهای پایتون",
        "پایتون (استفاده پیشرفته) - بهترین شیوه‌های Pytest: Fixtures, parameterization, test coverage",
        "طراحی سیستم و معماری - سیستم‌های توزیع‌شده: میکروسرویس‌ها، service discovery, message brokers",
        "طراحی سیستم و معماری - کشینگ پیشرفته: Redis, Memcached, الگوهای ابطال کش",
        "طراحی سیستم و معماری - API gateways & BFF: نمای کلی الگو، انتخاب‌های پیاده‌سازی",
        "DevOps و محیط - داکر/K8s پیشرفته: Docker Compose چند-سرویسی، Kubernetes پایه (deploy, services, secrets)",
        "DevOps و محیط - پایپ‌لاین‌های CI/CD: ساخت/تست/استقرار خودکار، نسخه‌بندی آرتیفکت",
        "امنیت و انطباق - OAuth2 & JWT: احراز هویت امن API، مدیریت توکن",
        "امنیت و انطباق - بازبینی کد امن: مدل‌سازی تهدید، بازبینی همتا برای امنیت",
        "گیت و همکاری تیمی - رهبری بازبینی کد: منتور کردن دیگران، اجرای استانداردهای بازبینی، اشتراک‌گذاری دانش",
        "گیت و همکاری تیمی - مدیریت انتشار: یادداشت‌های انتشار، تگ‌گذاری، برنامه‌های بازگشت (rollback)",
        "ساختمان داده و الگوریتم - بده‌بستان‌های الگوریتمی: تأخیر، توان عملیاتی، حافظه، مقیاس‌پذیری",
        "ساختمان داده و الگوریتم - جریان داده: Batch در مقابل stream، الگوهای موازی/ناهمزمان",
        "ساختمان داده و الگوریتم - مصاحبه‌های طراحی سیستم: طراحی یک کش مقیاس‌پذیر، rate limiter",
        "ارتباطات سرویس - REST: API gateway, orchestration, HATEOAS",
        "ارتباطات سرویس - GraphQL: Federation, schema stitching, security",
        "ارتباطات سرویس - gRPC: آگاهی، فایل‌های proto، چرا/چه زمانی استفاده شود",
        "ارتباطات سرویس - WebSockets: Real-time, distributed pub/sub, scaling",
        "همکاری فرانت‌اند و طراحی API - قابلیت استفاده API: طراحی اندپوینت‌های REST/GraphQL برای سهولت فرانت‌اند، نسخه‌بندی، مدیریت خطا",
        "همکاری فرانت‌اند و طراحی API - الگوی BFF: درک و پشتیبانی از راه‌حل‌های Backend for Frontend",
        "همکاری فرانت‌اند و طراحی API - عملکرد: هماهنگی کشینگ، صفحه‌بندی و شکل‌دهی داده برای مصرف فرانت‌اند",
        "همکاری فرانت‌اند و طراحی API - مستندسازی API: OpenAPI/Swagger, قراردادهای پاسخ واضح",
        "همکاری فرانت‌اند و طراحی API - بازبینی بین تیمی: شرکت در بازبینی‌های API با توسعه‌دهندگان فرانت‌اند",
    ],
    softSkills: [
        "تفکر سیستمی: دیدن 'تصویر بزرگ'، پیش‌بینی بدهی فنی، ریسک‌ها",
        "ارتباطات: توضیح واضح بده‌بستان‌ها، تصمیمات و نقشه راه",
        "مالکیت: مسئولیت‌پذیری برای انتشارها",
    ],
    responsibilities: [
        "مالکیت برخی از ویژگی‌های مهم را بر عهده دارد",
    ],
    roadmap: {
      months: [
        "ماه ۱: لاراول پیشرفته: صف‌ها، رویدادها، policies, observers",
        "ماه ۱: شروع به ماژولارسازی کد برنامه، ساخت پکیج‌های سفارشی",
        "ماه ۲: آشنایی با میکروسرویس‌ها",
        "ماه ۲: Docker Compose: راه‌اندازی محلی چند-سرویسی",
        "ماه ۲: پیاده‌سازی و نظارت بر کشینگ در سطوح مختلف (برنامه، پایگاه داده، HTTP)",
        "ماه ۳: افزودن نسخه‌بندی API، لایه gateway (یا BFF)",
        "ماه ۴ (اختیاری): منتور کردن یک توسعه‌دهنده جونیور در یک چرخه ویژگی",
      ],
      goals: [],
    },
    practicalTasks: [
        "یک پکیج سفارشی لاراول برای یک دامنه قابل استفاده مجدد (مثلاً نوتیفیکیشن‌ها) ایجاد کنید",
        "یک کش مبتنی بر Redis برای یک API حیاتی از نظر عملکرد راه‌اندازی و نظارت کنید",
        "یک مجموعه تست ویژگی بنویسید که موارد مرزی، همزمانی و بازگشت (rollback) را پوشش دهد",
    ],
    quizzes: [
        "چگونه ارتباط API-to-API را امن می‌کنید؟",
        "بده‌بستان‌های میکروسرویس‌ها در مقابل مونولیت چیست؟",
    ],
    timeEstimate: { fullTime: "۴-۶ ماه", partTime: "۷-۹ ماه" },
  },
  {
    level: 6,
    title: "سنیور ۱",
    experience: "۸-۱۲ ماه",
    goal: "مالکیت کل کدبیس. رهبری با الگو بودن در کیفیت کد، معماری و همکاری تیمی. پیشبرد بهبودها در عملکرد، مقیاس‌پذیری، قابلیت اطمینان و منتورینگ دیگران.",
    hardSkills: [
      "مفاهیم بک‌اند (همه تکنولوژی‌ها) - الگوهای مقیاس‌پذیری: مقیاس‌پذیری افقی در مقابل عمودی، تحلیل گلوگاه، لایه‌های کش",
      "مفاهیم بک‌اند (همه تکنولوژی‌ها) - پروفایلینگ عملکرد: ابزارها و متدولوژی‌ها برای پروفایلینگ کد و پایگاه داده، تست بار",
      "مفاهیم بک‌اند (همه تکنولوژی‌ها) - بهترین شیوه‌های امنیتی: OWASP Top 10، طراحی امن API، اعتبارسنجی ورودی، لاگ‌گیری حسابرسی",
      "پایگاه داده و پیام‌رسانی - NoSQL: MongoDB: مبانی replication",
      "پایگاه داده و پیام‌رسانی - Elasticsearch: سینتکس کوئری Lucene، داشبورد Kibana",
      "پایگاه داده و پیام‌رسانی - Replication: Master-slave, failover, monitoring",
      "پایگاه داده و پیام‌رسانی - مدل‌های سازگاری: سازگاری قوی/نهایی، قضیه CAP (استادی)",
      "پایگاه داده و پیام‌رسانی - Sharding: پارتیشن‌بندی افقی، موارد استفاده",
      "پایگاه داده و پیام‌رسانی - پیام‌رسانی: Kafka (آگاهی): pub/sub, partitions",
      "PHP / لاراول (استادی پیشرفته) - پکیج‌های سفارشی: ساخت و نگهداری پکیج‌های قابل استفاده مجدد لاراول",
      "PHP / لاراول (استادی پیشرفته) - Service Providerهای پیشرفته: Dynamic binding, deferred providers, package auto-discovery",
      "PHP / لاراول (استادی پیشرفته) - سیستم‌های Policy/Permission: احراز هویت چندلایه، ACL، نقش‌های تیم/سازمان",
      "PHP / لاراول (استادی پیشرفته) - تست در مقیاس: Mocking, data providers, coverage metrics, parallel testing",
      "PHP / لاراول (استادی پیشرفته) - مایگریشن‌های پیشرفته: استقرارهای بدون قطعی، اسکریپت‌های مهاجرت داده",
      "پایتون (استفاده پیشرفته) - Celery پیشرفته: Chords, groups, canvas, monitoring",
      "پایتون (استفاده پیشرفته) - پکیجینگ و توزیع: ساخت و انتشار پکیج‌های داخلی یا متن-باز",
      "پایتون (استفاده پیشرفته) - مبانی مهندسی داده: ETL, streaming, data validation",
      "پایتون (استفاده پیشرفته) - Pandas/Numpy پیشرفته: تبدیلات پیچیده، نکات عملکردی",
      "طراحی سیستم و معماری - سیستم‌های توزیع‌شده: میکروسرویس‌ها، service discovery, message brokers",
      "طراحی سیستم و معماری - DDD (Domain Driven Design): مدل‌سازی استراتژیک، bounded contexts, aggregates",
      "طراحی سیستم و معماری - CQRS/Event sourcing: الگوها برای جداسازی command/query، حسابرسی و بازگشت (rollback)",
      "DevOps و محیط - استقرار ابری: استقرار در AWS/GCP/Azure، استفاده از پایگاه داده مدیریت شده، S3، compute",
      "DevOps و محیط - مدیریت اسرار: Vault, environment separation, secure config",
      "DevOps و محیط - نظارت و هشدار: Prometheus, Grafana, Sentry, log aggregation",
      "DevOps و محیط - استقرارهای آبی/سبز/قناری: استراتژی‌های انتشار برای بدون قطعی، بازگشت (rollback)",
      "امنیت و انطباق - حفاظت از داده: مبانی GDPR، مدیریت PII، رمزنگاری در حالت استراحت",
      "امنیت و انطباق - لاگ‌گیری حسابرسی: ردیابی تغییرات، نظارت بر دسترسی، انطباق",
      "گیت و همکاری تیمی - بهداشت ریپازیتوری: Monorepo در مقابل polyrepo، submodules، مدیریت وابستگی",
      "گیت و همکاری تیمی - حل تعارض: مدیریت mergeهای پیچیده، میانجیگری در اختلافات تیمی",
      "ساختمان داده و الگوریتم - درخت‌ها/گراف‌های پیشرفته: Trie, DAGs, topological sort, shortest path",
      "ساختمان داده و الگوریتم - ساختمان داده‌های توزیع‌شده: Caches, bloom filters, sharding",
      "ارتباطات سرویس - REST: Orchestration, HATEOAS",
      "ارتباطات سرویس - GraphQL: Federation, schema stitching, security",
      "ارتباطات سرویس - gRPC: استفاده در تولید، streaming, auth, retries",
      "ارتباطات سرویس - WebSockets: Real-time, distributed pub/sub, scaling",
    ],
    softSkills: [
        "رهبری فنی: منتور کردن، رفع موانع و حمایت از دیگران؛ الگو بودن",
        "ابتکار عمل: پیشنهاد بهبودها، پیشبرد تغییرات، مالکیت مستندات معماری",
        "مالکیت: مسئولیت‌پذیری برای تحلیل پس از حادثه (postmortems) و سلامت پروژه",
    ],
    responsibilities: [
        "مالکیت ویژگی‌های کلیدی، منتور کردن جونیورها، تضمین کیفیت کد و بهترین شیوه‌ها.",
    ],
    roadmap: {
      months: [
        "ماه ۱: پایتون ناهمزمان: اندپوینت‌های async FastAPI، Celery پیشرفته",
        "ماه ۲: آشنایی با ارتباطات رویداد-محور",
        "ماه ۳: استقرار میکروسرویس‌ها در ابر، راه‌اندازی CI/CD و مدیریت اسرار",
        "ماه ۳: بازبینی‌های امنیتی، لاگ‌گیری حسابرسی، مدیریت PII",
        "ماه ۴ (اختیاری): آزمایش با CQRS، event sourcing در یک پروژه دمو",
        "ماه ۴ (اختیاری): پیاده‌سازی استقرار آبی/سبز برای به‌روزرسانی‌های بدون قطعی",
      ],
      goals: [],
    },
    practicalTasks: [
        "یک ویژگی ماژولار و رویداد-محور که چندین سرویس را در بر می‌گیرد طراحی و پیاده‌سازی کنید (مثلاً پردازش سفارش با لاراول و FastAPI، با استفاده از صف‌ها/رویدادها)",
        "یک میکروسرویس داکرایز شده را در یک محیط ابری (AWS/GCP/Azure) با پایپ‌لاین CI/CD بسازید و مستقر کنید",
    ],
    quizzes: [
        "تفاوت بین مقیاس‌پذیری افقی و عمودی چیست؟",
        "event sourcing چگونه با CRUD سنتی متفاوت است؟",
        "چگونه ارتباط API-to-API را امن می‌کنید؟",
        "چگونه الزامات GDPR را در یک API مدیریت می‌کنید؟",
        "استقرار آبی/سبز چیست؟ مراحل و ریسک‌ها؟",
    ],
    timeEstimate: { fullTime: "۶-۸ ماه", partTime: "۹-۱۲ ماه" },
  },
  {
    level: 7,
    title: "توسعه‌دهنده بک‌اند سنیور ۲",
    experience: "۱۲-۱۸ ماه",
    goal: "معماری، مقیاس‌دهی و امن‌سازی سیستم‌های بک‌اند توزیع‌شده و بزرگ. پیشبرد ابتکارات فنی بزرگ، تعیین استانداردها و منتورینگ همکاران و جونیورها. فعالیت به عنوان مشاور فنی مورد اعتماد و مالک زیرسیستم‌های حیاتی.",
    hardSkills: [
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - یکپارچه‌سازی سیستم‌ها: طراحی و پیاده‌سازی یکپارچه‌سازی با APIهای خارجی، سیستم‌های قدیمی یا ابزارهای شخص ثالث",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - مدیریت API gateway: پیاده‌سازی و بهینه‌سازی API gateways, BFF, rate limiting و احراز هویت",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - طراحی پیشرفته رویداد-محور: Sagas, outbox/inbox patterns, پردازش رویداد توزیع‌شده",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - الگوهای سازگاری داده: سازگاری نهایی، تراکنش‌های توزیع‌شده، idempotency، جبران",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - تنظیم عملکرد پیشرفته: پروفایلینگ، استراتژی‌های کشینگ، HTTP/2, gRPC, connection pooling, جریان‌های ناهمزمان",
        "مفاهیم بک‌اند (همه تکنولوژی‌ها) - مهندسی قابلیت اطمینان: Circuit breakers, retries, bulkheads, تخریب برازنده",
        "پایگاه داده و پیام‌رسانی - معماری چند-استاد: تکثیر چند-استاد، مزایا/معایب، حل تعارض",
        "پایگاه داده و پیام‌رسانی - استراتژی‌های Sharding: Range در مقابل hash، re-sharding پویا، کوئری‌های بین-شارد",
        "پایگاه داده و پیام‌رسانی - سازگاری و CAP: بررسی عمیق، بده‌بستان‌ها، تحمل پارتیشن",
        "پایگاه داده و پیام‌رسانی - قفل‌گذاری/همزمانی: قفل‌گذاری جدول/سطر، خوش‌بینانه/بدبینانه، مدیریت deadlock",
        "پایگاه داده و پیام‌رسانی - مقیاس‌دهی پایگاه داده: Read replicas, write scaling, connection pooling",
        "پایگاه داده و پیام‌رسانی - Elasticsearch: راه‌اندازی کلاستر، replication, tuning, backup/restore",
        "پایگاه داده و پیام‌رسانی - Redis: Cluster, persistence, eviction, Lua scripts",
        "پایگاه داده و پیام‌رسانی - پیام‌رسانی: Kafka: partitions, consumer groups, offset management, durability",
        "پایگاه داده و پیام‌رسانی - Event sourcing: ذخیره رویدادها، replay, audit, سازگاری نهایی",
        "PHP / لاراول (سطح خبره) - برنامه‌های چند-ماژول/پکیج: معماری و نگهداری کدبیس‌های بزرگ ماژولار لاراول",
        "PHP / لاراول (سطح خبره) - Laravel Octane & Swoole: PHP با عملکرد بالا با کارگران async/task، APIهای real-time",
        "PHP / لاراول (سطح خبره) - Service Container عمیق: bindings پیشرفته، تزریق متنی، حل وابستگی‌های دایره‌ای",
        "PHP / لاراول (سطح خبره) - انتشار و نگهداری پکیج: مدیریت چرخه حیات پکیج متن-باز و داخلی",
        "PHP / لاراول (سطح خبره) - لاراول + سرویس‌های خارجی: یکپارچه‌سازی با APIهای خارجی، SSO، درگاه‌های پرداخت و غیره",
        "PHP / لاراول (سطح خبره) - CLI و اتوماسیون سفارشی: دستورات artisan پیشرفته، orchestration cron",
        "پایتون (سطح خبره) - سیستم‌های ناهمزمان در مقیاس: کلاینت‌های HTTP ناهمزمان، وب‌سوکت‌ها، حلقه‌های رویداد، استخرهای کارگر",
        "پایتون (سطح خبره) - میکروسرویس‌ها در پایتون: تمپلیت‌های سرویس، ارتباطات بین-سرویس، استراتژی‌های تست",
        "پایتون (سطح خبره) - استفاده پیشرفته از FastAPI: تزریق وابستگی، وظایف پس‌زمینه، middleware سفارشی، افزونه‌های OpenAPI",
        "پایتون (سطح خبره) - Celery در مقیاس: مسیریابی، اولویت‌بندی وظایف، صف‌های توزیع‌شده، نظارت، مدیریت خطا",
        "پایتون (سطح خبره) - معماری پایپ‌لاین داده: ETL دسته‌ای و جریانی، مدیریت فایل‌های بزرگ، پردازش داده موازی",
        "پایتون (سطح خبره) - مشارکت در متن-باز: مشارکت و نگهداری از کتابخانه‌های پایتون شخص ثالث",
        "طراحی سیستم و معماری - ردیابی توزیع‌شده: مرتبط کردن لاگ‌ها/متریک‌ها در سرویس‌ها (Jaeger, Zipkin)",
        "طراحی سیستم و معماری - دسترسی‌پذیری بالا: کلاسترینگ، failover, replication, استراتژی‌های بازیابی فاجعه",
        "طراحی سیستم و معماری - DDD پیشرفته: Context mapping, anti-corruption layers, event storming",
        "طراحی سیستم و معماری - سیستم‌های چند-مستأجری: معماری برای SaaS, sharding, data isolation",
        "طراحی سیستم و معماری - CQRS/Event sourcing پیشرفته: مقیاس‌پذیری، history replay, audit, سازگاری نهایی",
        "DevOps و محیط - Kubernetes: Helm charts, rolling updates, pod autoscaling, custom controllers",
        "DevOps و محیط - CI/CD پیشرفته: پایپ‌لاین‌های چند-محیطی، canary deploys, feature toggles, secure secrets",
        "DevOps و محیط - الگوهای Cloud-native: Service meshes (Istio/Linkerd), config maps, secret stores",
        "DevOps و محیط - زیرساخت به عنوان کد: Terraform, Pulumi, CloudFormation basics",
        "DevOps و محیط - نظارت و SLOs: Service Level Objectives, alerting, distributed log/trace aggregation",
        "امنیت و انطباق - سیستم‌های احراز هویت پیشرفته: SSO (OAuth2, SAML), multi-factor, delegated permissions",
        "امنیت و انطباق - جریان‌های داده امن: رمزنگاری سرتاسری، مدیریت کلید امن، چرخش توکن",
        "امنیت و انطباق - انطباق قانونی: PCI, HIPAA, GDPR deep dives, audit trails, privacy by design",
        "امنیت و انطباق - پاسخ به حوادث: کتابچه‌های حوادث امنیتی، forensics, برنامه‌های ارتباطی",
        "گیت و همکاری تیمی - مدیریت Monorepo: استراتژی‌ها برای ریپازیتوری‌های بزرگ، submodules, code sharing",
        "گیت و همکاری تیمی - قطار انتشار/اتوماسیون: انتشارات زمان‌بندی شده، rollbacks, changelogs, semantic versioning",
        "گیت و همکاری تیمی - میانجیگری تعارض: تسهیل حل اختلافات فنی، ایجاد اجماع",
        "گیت و همکاری تیمی - مستندسازی فنی: نگهداری و تکامل مستندات معماری سطح بالا، رکوردهای تصمیم",
        "ساختمان داده و الگوریتم - الگوریتم‌های سیستم‌های توزیع‌شده: Consensus (Raft, Paxos), leader election, CRDTs",
        "ساختمان داده و الگوریتم - پارتیشن‌بندی/sharding داده: Consistent hashing, partition tolerance",
        "ساختمان داده و الگوریتم - ارزیابی ریسک الگوریتمی: تأثیر بر قابلیت اطمینان، امنیت، هزینه",
        "ساختمان داده و الگوریتم - ساختمان داده‌های سفارشی: برای بهینه‌سازی خاص دامنه",
        "ساختمان داده و الگوریتم - دانش سیستمی DSA: تأثیر DSA بر معماری و نتایج کسب‌وکار",
        "ارتباطات سرویس - REST: استانداردهای سازمانی، نسخه‌بندی جهانی، منسوخ‌سازی",
        "ارتباطات سرویس - GraphQL: اسکماهای بین-تیمی، federation, governance",
        "ارتباطات سرویس - gRPC: قراردادهای چند-زبانه، سازگاری عقب/جلو",
        "ارتباطات سرویس - WebSockets: تحلیل‌های real-time، تحویل چند-منطقه‌ای",
        "ارتباطات سرویس - تکامل API: استراتژی برای سازگاری بلندمدت",
    ],
    softSkills: [
        "تأثیر فنی: قهرمان بهترین شیوه‌ها، پیشبرد پذیرش در تیم‌ها",
        "تفکر استراتژیک: هم‌راستا کردن فناوری با کسب‌وکار، پیش‌بینی نیازهای آینده",
        "حل تعارض: میانجیگری در اختلافات فنی و تیمی، تقویت بحث سالم",
        "مربی‌گری: راهنمایی همکاران، پرورش جونیورها، رهبری با الگو بودن",
        "ارتباطات: ارائه ایده‌های پیچیده به صورت واضح به مخاطبان فنی و غیرفنی",
    ],
    responsibilities: [
        "پروژه‌ها را رهبری می‌کند، راه‌حل‌ها را معماری می‌کند، برتری فنی را پیش می‌برد.",
    ],
    roadmap: {
      months: [
        "ماه ۱: طراحی معماری‌های رویداد-محور، توزیع‌شده (تئوری + آزمایشگاه)",
        "ماه ۱: یادگیری عمیق Kubernetes, Helm و استقرارهای cloud-native",
        "ماه ۱: ماژولارسازی پیشرفته لاراول/پایتون و DI",
        "ماه ۲: پیاده‌سازی ردیابی توزیع‌شده و نظارت در یک سیستم زنده",
        "ماه ۲: معماری چند-مستأجری: sharding, data isolation, SaaS readiness",
        "ماه ۲: مشارکت در متن-باز (انتشار/نگهداری یک پکیج)",
        "ماه ۳: امنیت پیشرفته: SSO, key management, بازبینی‌های قانونی",
        "ماه ۳: شبیه‌سازی پاسخ به حوادث، بهترین شیوه‌های postmortem",
        "ماه ۳: پایپ‌لاین‌های داده: batch, stream, parallelism",
        "ماه ۴ (اختیاری): رهبری یک مهاجرت از مونولیت به میکروسرویس‌ها",
        "ماه ۴ (اختیاری): ساخت و تنظیم CI/CD برای ریپازیتوری‌های چند-تیمی، چند-سرویسی",
        "ماه ۴ (اختیاری): منتور کردن تیم‌ها، ایجاد استانداردهای فنی، تکامل مستندات معماری",
      ],
      goals: [],
    },
    practicalTasks: [
        "یک سیستم چند-سرویسی با ردیابی توزیع‌شده، جریان‌های رویداد-محور پیشرفته و failover معماری و پیاده‌سازی کنید.",
        "یک مونولیت را به میکروسرویس‌ها مهاجرت دهید، شامل بازآفرینی پایگاه داده، API gateway و احراز هویت.",
        "یک اپلیکیشن SaaS-ready و چند-مستأجری با لاراول یا FastAPI با جداسازی مستأجر و پیکربندی پویا بسازید.",
        "یک پایپ‌لاین استقرار مبتنی بر Kubernetes با auto-scaling، canary releases و نظارت SLO طراحی و مستقر کنید.",
        "یک میزگرد پاسخ به حوادث امنیتی را رهبری کرده و یک گزارش postmortem تولید کنید.",
    ],
    quizzes: [
        "چگونه سازگاری نهایی را در میکروسرویس‌ها تضمین می‌کنید؟",
        "بده‌بستان‌های Kubernetes در مقابل Docker Compose برای تولید چیست؟",
        "ردیابی توزیع‌شده چگونه کار می‌کند و چرا حیاتی است؟",
        "تفاوت بین SAML و OAuth2 را توضیح دهید.",
        "انطباق با PCI چیست و چگونه برای آن طراحی می‌کنید؟",
    ],
    timeEstimate: { fullTime: "۸-۱۰ ماه", partTime: "۱۲-۱۵ ماه" },
  },
  {
    level: 8,
    title: "توسعه‌دهنده لید/پرینسیپال بک‌اند",
    experience: "۱۸-۲۴ ماه",
    goal: "تعیین جهت فنی برای چندین تیم یا سیستم‌های حیاتی. معماری راه‌حل‌های پیچیده، مقیاس‌پذیر و امن. قهرمان بهترین شیوه‌ها، مستندسازی و رشد تیم. تأثیرگذاری بر استانداردهای سازمانی و منتورینگ مهندسان سنیور.",
    hardSkills: [
      "مفاهیم و معماری بک‌اند - هماهنگ‌سازی چند-سرویسی: طراحی و مدیریت service meshهای پیچیده، API gateways و اسکماهای مشترک",
      "مفاهیم و معماری بک‌اند - الگوهای معماری: Event sourcing, CQRS, DDD, micro-frontends, backend-for-frontend",
      "مفاهیم و معماری بک‌اند - مشاهده‌پذیری سیستم: ردیابی کامل، لاگ‌گیری ساختاریافته، داشبوردهای سلامت برنامه",
      "مفاهیم و معماری بک‌اند - نوسازی سیستم‌های قدیمی: استراتژی‌ها برای تجزیه مونولیت‌ها، برنامه‌های مهاجرت مرحله‌ای",
      "مفاهیم و معماری بک‌اند - برنامه‌ریزی ظرفیت: پیش‌بینی، تست بار، استراتژی‌های auto-scaling",
      "پایگاه داده و پیام‌رسانی - پایداری چندزبانه: چه زمانی و چگونه چندین نوع پایگاه داده را در یک سیستم ترکیب کنیم",
      "پایگاه داده و پیام‌رسانی - معماری پایگاه داده: ارزیابی پایگاه‌های داده برای بار کاری، هزینه و مقیاس‌پذیری",
      "پایگاه داده و پیام‌رسانی - تکثیر جهانی: چند-منطقه‌ای، cross-DC، استراتژی‌های تأخیر، برنامه‌ریزی DR",
      "پایگاه داده و پیام‌رسانی - پروتکل‌های اجماع: Paxos, Raft (آگاهی)، تأثیر بر قابلیت اطمینان پایگاه داده و پیام‌رسانی",
      "پایگاه داده و پیام‌رسانی - مهاجرت‌های پایگاه داده: مهاجرت بدون قطعی، ابزارهای تکامل اسکما",
      "پایگاه داده و پیام‌رسانی - Elasticsearch: مقیاس‌پذیری، جستجوی بین-کلاستر، آنالایزرهای سفارشی",
      "پایگاه داده و پیام‌رسانی - Redis: Multi-master, cluster failover, geo-replication",
      "پایگاه داده و پیام‌رسانی - Kafka/RabbitMQ: توان عملیاتی بالا، تحویل تضمین شده، ترتیب‌دهی، صف‌های dead-letter",
      "پایگاه داده و پیام‌رسانی - حسابرسی و امنیت: رمزنگاری در حالت استراحت، لاگ‌گیری حسابرسی، انطباق برای داده‌ها",
      "پایگاه داده و پیام‌رسانی - قابلیت اطمینان داده: پشتیبان‌گیری، بازیابی، PITR، مدیریت خرابی",
      "PHP / لاراول (سطح خبره/معمار) - لاراول به عنوان پلتفرم: معماری لاراول برای SaaS، چند-مستأجری یا پلتفرم‌های مبتنی بر پلاگین",
      "PHP / لاراول (سطح خبره/معمار) - داربست‌زنی سفارشی: ساخت بلوپرینت‌های قابل استفاده مجدد، ابزارهای CLI و تمپلیت‌ها",
      "PHP / لاراول (سطح خبره/معمار) - طراحی پکیج پیشرفته: نگهداری پکیج‌های داخلی/خارجی، نسخه‌بندی معنایی، منسوخ‌سازی",
      "PHP / لاراول (سطح خبره/معمار) - داخلیات لاراول: مشارکت در فریم‌ورک، پیشنهاد RFCها، گسترش هسته",
      "PHP / لاراول (سطح خبره/معمار) - یکپارچه‌سازی بین-زبانه: پل زدن لاراول با پایتون/گو/نود برای معماری‌های چندزبانه",
      "پایتون (سطح خبره/معمار) - میکروسرویس‌های ناهمزمان: معماری، مستندسازی و نظارت بر سرویس‌های پایتون ناهمزمان (FastAPI, Celery)",
      "پایتون (سطح خبره/معمار) - مهندسی داده در مقیاس: Data lakes، پردازش دسته‌ای/جریانی، ETL پیشرفته",
      "پایتون (سطح خبره/معمار) - یکپارچه‌سازی چندزبانه: ارتباطات gRPC/REST، اسکماهای مشترک، قراردادهای بین-سرویس",
      "پایتون (سطح خبره/معمار) - رهبری متن-باز: نگهداری/مشارکت در پروژه‌های کلیدی پایتون، رهبری استانداردها",
      "مهندسی نرم‌افزار پیشرفته - مستندسازی طراحی: ایجاد/نگهداری ADRs، دیاگرام‌های معماری، دیاگرام‌های توالی",
      "مهندسی نرم‌افزار پیشرفته - بهترین شیوه‌های مستندسازی: مستندات زنده، راهنماهای آنبوردینگ، کامنت‌های کد، مستندات API، پایگاه دانش",
      "مهندسی نرم‌افزار پیشرفته - مدیریت بدهی فنی: ردیابی سیستماتیک، اولویت‌بندی و اصلاح",
      "مهندسی نرم‌افزار پیشرفته - کیفیت کد پیشرفته: تحلیل استاتیک، متریک‌های کد، پوشش تست به عنوان یک فرهنگ",
      "مهندسی نرم‌افزار پیشرفته - ارزیابی ریسک سیستمی: شناسایی، ارتباط و کاهش ریسک‌های فنی سیستمی",
      "DevOps، پلتفرم و قابلیت اطمینان - Kubernetes در مقیاس: چند-کلاستر، HA، سیاست‌های شبکه، چرخش secret",
      "DevOps، پلتفرم و قابلیت اطمینان - اتوماسیون پلتفرم: GitOps، زیرساخت به عنوان کد، ابزارهای سلف-سرویس برای تیم‌های توسعه",
      "DevOps، پلتفرم و قابلیت اطمینان - شیوه‌های SRE: SLOs/SLIs، بودجه‌های خطا، chaos engineering، postmortemهای بدون سرزنش",
      "DevOps، پلتفرم و قابلیت اطمینان - امنیت از طریق طراحی: پیش‌فرض‌های امن، مدل‌سازی تهدید، کتابچه‌های حوادث",
      "DevOps، پلتفرم و قابلیت اطمینان - چند-ابری/هیبرید: معماری و استقرار در ارائه‌دهندگان مختلف، اجتناب از قفل شدن در فروشنده",
      "رهبری، نفوذ و همکاری - چشم‌انداز فنی: تعیین و بیان جهت فنی برای تیم‌ها و پروژه‌ها",
      "رهبری، نفوذ و همکاری - مربی‌گری و راهنمایی: رشد دادن مهندسان سنیور، تفویض اختیار، تقویت فرهنگ یادگیری",
      "رهبری، نفوذ و همکاری - تأثیر بین-تیمی: پیشبرد پذیرش استانداردها، حل تعارضات، هم‌راستا کردن تیم‌ها",
      "رهبری، نفوذ و همکاری - ارتباط با ذینفعان: پل ارتباطی بین مهندسی، محصول و کسب‌وکار",
      "رهبری، نفوذ و همکاری - مستندسازی در سطح سازمان: قهرمانی، بازبینی و اجرای استانداردهای مستندسازی",
      "رهبری، نفوذ و همکاری - تنوع و فراگیری: تقویت یک محیط مهندسی فراگیر و مشارکتی",
      "معماری فول-استک و همکاری فرانت‌اند - طراحی API-first: پیشبرد توسعه API-first، تست قرارداد و تکرار سریع",
      "معماری فول-استک و همکاری فرانت‌اند - BFF و هماهنگ‌سازی: معماری/نظارت بر Backend for Frontend و الگوهای ترکیب API",
      "معماری فول-استک و همکاری فرانت‌اند - Micro-frontends (آگاهی): درک پیامدها برای طراحی API و مرزهای سرویس",
      "معماری فول-استک و همکاری فرانت‌اند - SSR و عملکرد: پشتیبانی از رندر سمت سرور، بهینه‌سازی بک‌اند برای زمان بارگذاری فرانت‌اند",
      "معماری فول-استک و همکاری فرانت‌اند - حاکمیت API: تعیین استانداردهای سازمانی برای سازگاری API، منسوخ‌سازی و مستندسازی",
      "معماری فول-استک و همکاری فرانت‌اند - تجربه توسعه‌دهنده: تضمین یکپارچه‌سازی و آنبوردینگ بی‌نقص برای تیم‌های فرانت‌اند",
      "معماری فول-استک و همکاری فرانت‌اند - دسترسی‌پذیری و UX (آگاهی): شناخت نقش بک‌اند در پشتیبانی از دسترسی‌پذیری و تجربه کاربری",
    ],
    softSkills: [
      "چشم‌انداز و هم‌راستایی: الهام بخشیدن، هم‌راستا کردن تیم‌ها و ذینفعان در جهت فنی",
      "ارتباطات اجرایی: ارائه به رهبری، توجیه سرمایه‌گذاری‌ها، گزارش تأثیر",
      "تفویض اختیار: توانمندسازی دیگران، اجتناب از گلوگاه‌ها، توسعه رهبران جدید",
      "تاب‌آوری: مدیریت شکست‌ها، تقویت ایمنی روانی، پذیرش یادگیری از شکست",
      "حمایت: قهرمانی بهترین شیوه‌ها، مستندسازی و فرآیندهای فراگیر",
    ],
    responsibilities: [
      "جهت فنی را تعیین می‌کند، سنیورها را منتور می‌کند، بر معماری در سطح سازمان تأثیر می‌گذارد.",
    ],
    roadmap: {
      months: [
        "ماه ۱: تعیین چشم‌انداز فنی، تعریف معماری هدف، ایجاد ADRها و دیاگرام‌های اولیه",
        "ماه ۱: حسابرسی و بهبود مستندسازی، ایجاد استانداردهای مستند و چرخه‌های بازبینی",
        "ماه ۲: رهبری یک مهاجرت بین-تیمی یا پروژه greenfield؛ تفویض، راهنمایی و مستندسازی تصمیمات",
        "ماه ۲: پیاده‌سازی مشاهده‌پذیری پیشرفته، SLOs و گردش کارهای GitOps",
        "ماه ۳: اجرای اتوماسیون پلتفرم و ابتکارات IaC",
        "ماه ۳: پیشبرد پاکسازی بدهی فنی و کاهش ریسک با ردیابی سیستمی",
        "ماه ۴ (اختیاری): مشارکت در فریم‌ورک‌های متن-باز یا داخلی",
        "ماه ۴ (اختیاری): منتور کردن و آنبوردینگ لیدهای جدید؛ پیشبرد فرهنگ فراگیری و مستندسازی",
      ],
      goals: [],
    },
    practicalTasks: [
      "یک پلتفرم چند-مستأجری و مقیاس‌پذیر با میکروسرویس‌های چندزبانه را با استفاده از ADRها و دیاگرام‌های معماری طراحی و مستند کنید",
      "یک مهاجرت از سیستم قدیمی را رهبری کنید: تجزیه یک مونولیت به سرویس‌ها را برنامه‌ریزی و اجرا کنید، شامل ارزیابی ریسک/بدهی فنی",
      "استانداردهای مستندسازی و کیفیت کد را در چندین تیم ایجاد و اجرا کنید",
      "گردش کارهای GitOps را برای استقرار و بازگشت (rollback) بی‌نقص پیاده‌سازی کنید",
      "یک مهندس سنیور را در یک پروژه پیچیده منتور کنید، با تمرکز بر تفویض اختیار و رشد",
    ],
    quizzes: [
      "بده‌بستان‌های چند-ابری در مقابل تک-ابری چیست؟",
      "چگونه اطمینان حاصل می‌کنید که مستندات به‌روز و مفید باقی می‌مانند؟",
      "chaos engineering و ارزش آن را توضیح دهید.",
      "چگونه برای مشاهده‌پذیری در میکروسرویس‌ها طراحی می‌کنید؟",
      "ADR چیست؟ چرا مهم است؟",
    ],
    timeEstimate: { fullTime: "۱۲-۱۸ ماه", partTime: "۱۸-۲۴ ماه" },
  },
  {
    level: 9,
    title: "مدیر / دایرکتور مهندسی بک‌اند",
    experience: "۱۸-۳۰ ماه",
    goal: "پیشبرد چشم‌انداز فنی، تحویل و برتری عملیاتی چندین تیم یا خط محصول بک‌اند. رهبری مدیران مهندسی و مهندسان پرینسیپال. اطمینان از هم‌راستایی استراتژی فنی با اهداف کسب‌وکار. تقویت فرهنگ برتری، نوآوری و مستندسازی.",
    hardSkills: [
      "مفاهیم و معماری بک‌اند - استراتژی فنی: تعریف و ابلاغ چشم‌انداز بک‌اند و نقشه راه بلندمدت",
      "مفاهیم و معماری بک‌اند - حاکمیت معماری: تأیید بازبینی‌های معماری، اجرای استانداردها در تیم‌ها",
      "مفاهیم و معماری بک‌اند - مدیریت پورتفولیو: ارزیابی، اولویت‌بندی و از رده خارج کردن سیستم‌ها در صورت نیاز",
      "مفاهیم و معماری بک‌اند - مقیاس‌پذیری در سطح سازمان: معماری برای رشد ۱۰ برابری، پیشبرد مهاجرت‌های بزرگ، پلتفرم‌سازی",
      "مفاهیم و معماری بک‌اند - مدیریت حوادث: نظارت بر حوادث با شدت بالا، RCA، پیشبرد یادگیری در سطح سازمان",
      "ساختمان داده و الگوریتم - DSA برای معماری: راهنمایی تیم‌ها در انتخاب‌های DSA برای مقیاس‌پذیری، قابلیت اطمینان، هزینه",
      "ساختمان داده و الگوریتم - الگوریتم‌های توزیع‌شده: Consensus, leader election, partitioning, CRDTs (به عنوان تصمیم‌گیرنده)",
      "ساختمان داده و الگوریتم - تحلیل بده‌بستان الگوریتم: ارزیابی انتخاب‌های DSA برای سیستم‌ها/پلتفرم‌های جدید",
      "ساختمان داده و الگوریتم - آموزش DSA: حمایت و تقویت آموزش DSA و مصاحبه‌های کد در سطح سازمان",
      "ارتباطات سرویس - معماری چند-پروتکلی: تعیین استانداردها برای REST, gRPC, GraphQL, WebSockets در سطح سازمان",
      "ارتباطات سرویس - قابلیت همکاری: پیشبرد استراتژی برای ارتباطات بین-زبانه و بین-تیمی",
      "ارتباطات سرویس - حاکمیت API: ایجاد چرخه حیات API، تکامل و سیاست‌های منسوخ‌سازی",
      "ارتباطات سرویس - امنیت/انطباق در APIها: SSO سازمانی، scopes، محدودیت نرخ، حسابرسی، بازبینی‌های امنیتی API",
      "پایگاه داده و پیام‌رسانی - پایداری چندزبانه در مقیاس: رهبری انتخاب و استانداردسازی فناوری پایگاه داده",
      "پایگاه داده و پیام‌رسانی - استراتژی‌های داده جهانی: تکثیر چند-منطقه‌ای، انطباق، DR، مدیریت تأخیر",
      "پایگاه داده و پیام‌رسانی - چرخه حیات داده: نگهداری، بایگانی، انطباق، حسابرسی برای همه سیستم‌ها",
      "پایگاه داده و پیام‌رسانی - استراتژی پلتفرم پیام‌رسانی: ارزیابی Kafka/RabbitMQ/Redis، مدیریت event bus جهانی",
      "پایگاه داده و پیام‌رسانی - مهاجرت‌های سازمانی: برنامه‌ریزی و نظارت بر مهاجرت‌های چند-سیستمی، تضمین یکپارچگی داده",
      "PHP / لاراول و پایتون (سطح نظارت) - جهت‌گیری فریم‌ورک: تصمیم‌گیری در مورد ارتقاءها، پذیرش فناوری جدید، از رده خارج کردن فریم‌ورک‌های قدیمی",
      "PHP / لاراول و پایتون (سطح نظارت) - SDLC امن: اطمینان از اینکه همه تیم‌ها از کدنویسی امن، بازبینی‌ها و مدیریت وابستگی پیروی می‌کنند",
      "PHP / لاراول و پایتون (سطح نظارت) - استانداردها و بهترین شیوه‌ها: اجرای استانداردهای کیفیت کد، تست و مستندسازی در سطح سازمان",
      "PHP / لاراول و پایتون (سطح نظارت) - برندسازی فنی: تشویق مشارکت در متن-باز، نمایندگی شرکت در جامعه فنی",
      "مهندسی نرم‌افزار پیشرفته - چرخه حیات بدهی فنی: ردیابی، بودجه‌بندی و بازپرداخت سیستماتیک در سطح سازمان",
      "مهندسی نرم‌افزار پیشرفته - مستندسازی معماری: تضمین مستندات زنده، ADRs، آنبوردینگ و مصنوعات انطباق",
      "مهندسی نرم‌افزار پیشرفته - کیفیت در مقیاس: تقویت تست، بازبینی کد و برتری انتشار در سطح سازمان",
      "مهندسی نرم‌افزار پیشرفته - مدیریت ریسک سیستمی: شناسایی، ارتباط و کاهش ریسک‌های فنی بین-سازمانی",
      "DevOps، پلتفرم و قابلیت اطمینان - چشم‌انداز پلتفرم: پلتفرم‌سازی، زیرساخت سلف-سرویس، بهره‌وری توسعه‌دهنده",
      "DevOps، پلتفرم و قابلیت اطمینان - برنامه SRE: ساخت و رهبری تیم‌های SRE/DevOps، پیشبرد پذیرش SLOs/SLIs",
      "DevOps، پلتفرم و قابلیت اطمینان - انطباق و امنیت: پاسخ به حوادث، حسابرسی‌ها و برنامه‌های قانونی در سطح سازمان",
      "DevOps، پلتفرم و قابلیت اطمینان - مدیریت فروشندگان: ارزیابی/تأیید پایگاه داده، ابر و فروشندگان پیام‌رسانی شخص ثالث",
      "رهبری، نفوذ و همکاری - رهبری تیم: ساختن، منتورینگ و رشد مدیران ارشد، لیدها و ICها",
      "رهبری، نفوذ و همکاری - هم‌راستایی بین-بخشی: همکاری با محصول، امنیت، حقوقی و سایر بخش‌ها",
      "رهبری، نفوذ و همکاری - ارتباطات استراتژیک: ارائه به مدیران اجرایی، هیئت مدیره و شرکای خارجی",
      "رهبری، نفوذ و همکاری - طراحی سازمانی: ساختاردهی تیم‌ها برای مقیاس، رشد و نوآوری",
      "رهبری، نفوذ و همکاری - فرهنگ: تقویت مستندسازی، فراگیری، ایمنی روانی و یادگیری",
      "استراتژی فول-استک و یکپارچه‌سازی فرانت‌اند - هم‌راستایی بین-بخشی: هم‌راستا کردن استراتژی‌ها، نقشه‌های راه و زمانبندی تحویل بک‌اند و فرانت‌اند",
      "استراتژی فول-استک و یکپارچه‌سازی فرانت‌اند - استانداردهای API در سطح سازمان: اجرای و تکامل سیاست‌های API، مستندسازی و نسخه‌بندی",
      "استراتژی فول-استک و یکپارچه‌سازی فرانت‌اند - معماری فول-استک: نظارت بر مرزهای سیستم توزیع‌شده، BFF, SSR, micro-frontends",
      "استراتژی فول-استک و یکپارچه‌سازی فرانت‌اند - مدیریت چرخه حیات API: رهبری چرخه حیات، حاکمیت و فرآیندهای منسوخ‌سازی API بین-تیمی",
      "استراتژی فول-استک و یکپارچه‌سازی فرانت‌اند - تأثیر عملکرد فرانت‌اند: اطمینان از اینکه بک‌اند از عملکرد و مقیاس‌پذیری بهینه فرانت‌اند پشتیبانی می‌کند",
      "استراتژی فول-استک و یکپارچه‌سازی فرانت‌اند - همکاری با ذینفعان: همکاری با رهبران محصول/طراحی/فرانت‌اند برای تحویل سرتاسری",
      "استراتژی فول-استک و یکپارچه‌سازی فرانت‌اند - حمایت از دسترسی‌پذیری/UX: قهرمانی پشتیبانی بک‌اند برای دسترسی‌پذیری و تجربه کاربری در کلاس جهانی",
    ],
    softSkills: [
      "حضور اجرایی: الهام بخشیدن، نفوذ و هم‌راستا کردن ذینفعان سطح C و هیئت مدیره",
      "همدلی و فراگیری: ساختن تیم‌های امن، متنوع و درگیر",
      "چشم‌انداز استراتژیک: رهبری سازمان در ابهام، رشد و چرخش‌ها",
      "تفویض اختیار و اعتماد: مقیاس‌دهی از طریق دیگران، توانمندسازی مدیران، اجتناب از گلوگاه‌ها",
      "مدیریت تغییر: پیشبرد تغییرات در سطح سازمان، مدیریت مقاومت، ابلاغ تأثیر",
    ],
    responsibilities: [
      "تیم‌ها را رهبری می‌کند، استراتژی فنی را تعیین می‌کند، تحویل و فرهنگ را پیش می‌برد.",
    ],
    roadmap: {
      months: [
        "ماه‌های ۱-۲: تعیین چشم‌انداز و استانداردهای فنی بک‌اند در سطح سازمان",
        "ماه‌های ۱-۲: راه‌اندازی ابتکارات مستندسازی و کیفیت",
        "ماه‌های ۱-۲: حسابرسی و نقشه راه بدهی فنی و سرمایه‌گذاری‌های پلتفرم",
        "ماه‌های ۳-۴: نظارت و حمایت از مهاجرت‌های چند-تیمی یا راه‌اندازی پلتفرم‌های جدید",
        "ماه‌های ۳-۴: پیشبرد شیوه‌های SRE/DevOps، انطباق و بهبودهای مدیریت حوادث",
        "ماه‌های ۵-۶ (اختیاری): ارائه استراتژی فنی به مدیران اجرایی/هیئت مدیره",
        "ماه‌های ۵-۶ (اختیاری): منتور کردن دایرکتورها، مدیران و مهندسان پرینسیپال جدید",
        "ماه‌های ۵-۶ (اختیاری): تقویت مشارکت در متن-باز و جامعه فنی",
      ],
      goals: [],
    },
    practicalTasks: [
      "یک استراتژی فنی برای یک خط محصول یا مهاجرت پلتفرم جدید تعریف و اجرا کنید",
      "بر یک بازبینی معماری چند-تیمی نظارت کنید: استانداردها را تعیین کنید، بده‌بستان‌ها را میانجیگری کنید، ADRها را منتشر کنید",
      "یک مهاجرت داده را رهبری کنید: چند-منطقه‌ای، چند-سیستمی، با انطباق و حسابرسی",
      "حاکمیت API را پیاده‌سازی کنید: چرخه حیات، نسخه‌بندی، منسوخ‌سازی، استانداردهای سازمانی",
      "یک برنامه مستندسازی و کیفیت بسازید: اجرای مستند، تست و فرهنگ بازبینی",
    ],
    quizzes: [
      "چگونه یک فناوری پایگاه داده یا پیام‌رسانی جدید را برای پذیرش در سطح سازمان ارزیابی می‌کنید؟",
      "چگونه یک مهاجرت بدون قطعی را برای یک سرویس حیاتی برنامه‌ریزی و اجرا می‌کنید؟",
      "رویکرد شما برای ایجاد تعادل بین نوآوری و بدهی فنی چیست؟",
      "چگونه بهترین شیوه‌های مستندسازی را در مقیاس بزرگ تقویت می‌کنید؟",
      "چگونه معماری بین-تیمی را با اهداف کسب‌وکار هم‌راستا می‌کنید؟",
    ],
    timeEstimate: { fullTime: "۱۸-۳۰ ماه", partTime: "۲۴-۳۶ ماه" },
  },
  {
    level: 10,
    title: "مدیر اجرایی / رئیس مهندسی بک‌اند",
    experience: "۲۴-۳۶ ماه",
    goal: "مالکیت چشم‌انداز فنی و سازمانی مهندسی بک‌اند در سراسر شرکت. شکل دادن به استراتژی پلتفرم، سرمایه‌گذاری‌های فنی و فرهنگ برای تحویل محصول در کلاس جهانی. ایفای نقش کلیدی در رهبری اجرایی، موقعیت‌یابی در بازار و بررسی‌های فنی (due diligence).",
    hardSkills: [
      "استراتژی فنی و پلتفرم - چشم‌انداز فنی سازمانی: تعریف و قهرمانی معماری بلندمدت بک‌اند و فول-استک",
      "استراتژی فنی و پلتفرم - تکامل پلتفرم: رهبری پلتفرم‌سازی، ماژولارسازی و بهره‌وری توسعه‌دهنده",
      "استراتژی فنی و پلتفرم - سرمایه‌گذاری فناوری: ارزیابی و حمایت از فناوری جدید، از رده خارج کردن سیستم‌های قدیمی، تخصیص بودجه‌های R&D",
      "استراتژی فنی و پلتفرم - M&A و یکپارچه‌سازی: نظارت بر بررسی فنی (due diligence)، یکپارچه‌سازی پلتفرم‌های خریداری شده",
      "ساختمان داده و الگوریتم - تأثیر سیستمی DSA: راهنمایی انتخاب‌های DSA برای هزینه، مقیاس‌پذیری و تمایز کسب‌وکار",
      "ساختمان داده و الگوریتم - آموزش در سطح سازمان: تعیین استانداردهای مصاحبه DSA، حمایت از آموزش در سطح سازمان",
      "ساختمان داده و الگوریتم - تحلیل ریسک الگوریتمی: ارزیابی ریسک پلتفرم و محصول بر اساس کارایی الگوریتمی",
      "ارتباطات سرویس - حاکمیت چند-پروتکلی: استانداردهای سازمانی برای REST, gRPC, GraphQL و WebSockets",
      "ارتباطات سرویس - محصول‌سازی API: راهنمایی استراتژی API عمومی/داخلی و موقعیت‌یابی در بازار",
      "ارتباطات سرویس - رهبری چرخه حیات API: نظارت بر نسخه‌بندی، منسوخ‌سازی و تأثیر شریک خارجی",
      "ارتباطات سرویس - امنیت، انطباق و حسابرسی: پیشبرد استراتژی‌های امنیتی، انطباق و حسابرسی API",
      "پایگاه داده و پیام‌رسانی - استراتژی فناوری: تعیین جهت برای پلتفرم‌های رابطه‌ای، NoSQL، جستجو و پیام‌رسانی",
      "پایگاه داده و پیام‌رسانی - حاکمیت داده جهانی: نظارت بر انطباق، نگهداری، DR و استراتژی‌های چند-منطقه‌ای",
      "پایگاه داده و پیام‌رسانی - ارزیابی فروشندگان: رهبری مذاکرات پرمخاطره، انتخاب فروشندگان استراتژیک پایگاه داده/پیام‌رسانی",
      "پایگاه داده و پیام‌رسانی - نوآوری پلتفرم داده: حمایت از رویکردهای جدید (event sourcing, streaming, AI/analytics)",
      "چشم‌انداز محصول و پلتفرم (رهبری فول-استک) - چشم‌انداز پلتفرم سرتاسری: هم‌راستا کردن بک‌اند، فرانت‌اند و موبایل برای تجربه یکپارچه",
      "چشم‌انداز محصول و پلتفرم (رهبری فول-استک) - تجربه توسعه‌دهنده و کاربر: سرمایه‌گذاری در DX/UX سازمانی، پیشبرد فرهنگ قابلیت استفاده",
      "چشم‌انداز محصول و پلتفرم (رهبری فول-استک) - استراتژی API و پلتفرم خارجی: راهنمایی محصول‌سازی API، یکپارچه‌سازی شریک و اکوسیستم",
      "چشم‌انداز محصول و پلتفرم (رهبری فول-استک) - روندهای بازار و فناوری: پیش‌بینی و بهره‌برداری از فناوری‌های جدید برای مزیت کسب‌وکار",
      "چشم‌انداز محصول و پلتفرم (رهبری فول-استک) - همکاری بین-سازمانی: ساختن پل با محصول، طراحی، امنیت و کسب‌وکار",
      "مهندسی نرم‌افزار پیشرفته - معماری سازمانی: نظارت بر معماری‌های مرجع، بهترین شیوه‌ها و شوراهای فنی",
      "مهندسی نرم‌افزار پیشرفته - بدهی فنی و ریسک: تعیین سیاست‌ها و بودجه‌ها برای بدهی فنی، مدیریت ریسک در مقیاس بزرگ",
      "مهندسی نرم‌افزار پیشرفته - انطباق و حسابرسی: اطمینان از اینکه همه سیستم‌های بک‌اند الزامات قانونی و حسابرسی را برآورده می‌کنند",
      "مهندسی نرم‌افزار پیشرفته - استراتژی متن-باز: راهنمایی مشارکت‌های شرکت و برندسازی فنی",
      "DevOps، پلتفرم و قابلیت اطمینان - SRE/DevOps در سطح سازمان: ساخت و توانمندسازی تیم‌های SRE/DevOps با تأثیر بالا",
      "DevOps، پلتفرم و قابلیت اطمینان - سرمایه‌گذاری پلتفرم: تعیین اولویت‌ها برای زیرساخت، اتوماسیون و قابلیت اطمینان",
      "DevOps، پلتفرم و قابلیت اطمینان - امنیت و انطباق: رهبری ابتکارات امنیتی سازمانی، پاسخ به حوادث و حسابرسی‌ها",
      "DevOps، پلتفرم و قابلیت اطمینان - استراتژی فروشنده و ابر: راهنمایی در انتخاب ارائه‌دهنده ابر و ابزارها، مذاکره قرارداد",
      "رهبری اجرایی، نفوذ و همکاری - هم‌راستایی اجرایی: پیشبرد اولویت‌های فنی در سطح هیئت مدیره، C-level و بین-سازمانی",
      "رهبری اجرایی، نفوذ و همکاری - استراتژی استعداد: جذب و حفظ رهبری مهندسی برتر",
      "رهبری اجرایی، نفوذ و همکاری - مدیریت تغییر: رهبری تحولات سازمانی، مدیریت مقاومت و پیشبرد پذیرش",
      "رهبری اجرایی، نفوذ و همکاری - تنوع، برابری، فراگیری: تعیین و قهرمانی فرهنگ مهندسی فراگیر",
      "رهبری اجرایی، نفوذ و همکاری - نمایندگی خارجی: نمایندگی شرکت در کنفرانس‌ها، رسانه‌ها و با شرکای کلیدی",
    ],
    softSkills: [
      "چشم‌انداز و داستان‌سرایی: الهام بخشیدن به سازمان، ابلاغ چشم‌انداز به مخاطبان متنوع",
      "حل تعارض: راهبری در اختلافات سطح C، هیئت مدیره و شرکا",
      "مذاکره استراتژیک: رهبری مذاکرات پرمخاطره با فروشندگان، استعدادها و شرکا",
      "توانمندسازی: رشد و اعتماد به رهبران ارشد، ایجاد خطوط لوله رهبری مقیاس‌پذیر",
      "حضور اجرایی: نمایندگی شرکت، شکل دادن به فرهنگ و پیشبرد رهبری فنی در بازار",
    ],
    responsibilities: [
      "مالک چشم‌انداز بک‌اند است، استراتژی فنی و کسب‌وکار را در سطح سازمان هم‌راستا می‌کند.",
    ],
    roadmap: {
      months: [
        "ماه‌های ۱-۳: حسابرسی و تعیین استراتژی پلتفرم، برنامه سرمایه‌گذاری فنی و ساختار سازمانی",
        "ماه‌های ۱-۳: راه‌اندازی ابتکارات DX/UX و فرهنگ مستندسازی",
        "ماه‌های ۴-۶: نظارت بر انتخاب فناوری‌های بزرگ، مذاکرات با فروشندگان و بازبینی‌های معماری بین-سازمانی",
        "ماه‌های ۴-۶: پیشبرد برنامه‌های SRE, DevOps, امنیت و انطباق",
        "ماه‌های ۷-۱۲: ارائه و دفاع از چشم‌انداز فنی به هیئت مدیره/سرمایه‌گذاران",
        "ماه‌های ۷-۱۲: منتور کردن و توسعه نسل بعدی رهبران فنی",
        "ماه‌های ۷-۱۲: رهبری بررسی فنی (due diligence) و یکپارچه‌سازی M&A",
      ],
      goals: [],
    },
    practicalTasks: [
      "یک چشم‌انداز فنی ۳-۵ ساله برای مهندسی بک‌اند و پلتفرم تعریف و ابلاغ کنید",
      "بررسی فنی (due diligence) و برنامه یکپارچه‌سازی برای یک خرید بزرگ را رهبری کنید",
      "بر تحول از مونولیت به پلتفرم توزیع‌شده در چندین خط کسب‌وکار نظارت کنید",
      "از ابتکارات مستندسازی و تجربه توسعه‌دهنده در سطح سازمان حمایت کنید",
      "استراتژی فنی را به هیئت مدیره، سرمایه‌گذاران یا شرکای خارجی ارائه دهید",
    ],
    quizzes: [
      "چگونه بین نوآوری، ثبات و انطباق در مقیاس بزرگ تعادل برقرار می‌کنید؟",
      "رویکرد شما برای حفظ استعداد و توسعه رهبری چیست؟",
      "چگونه بین ساختن، خریدن یا شراکت برای قابلیت‌های فنی جدید انتخاب می‌کنید؟",
      "چگونه از برندسازی فنی و متن-باز برای جذب و موقعیت‌یابی شرکت استفاده می‌کنید؟",
      "چارچوب شما برای تصمیم‌گیری فنی در شرایط عدم قطعیت کسب‌وکار چیست؟",
    ],
    timeEstimate: { fullTime: "۲۴-۳۶ ماه", partTime: "۳۰-۴۸ ماه" },
  },
  {
    level: 11,
    title: "CTO / معاون مهندسی (تمرکز بک‌اند)",
    experience: "۳۶-۶۰ ماه",
    goal: "رهبری استراتژی و اجرای فناوری برای کل شرکت. شکل دادن به فرهنگ فنی، پلتفرم و استعداد مورد نیاز برای موفقیت بلندمدت کسب‌وکار. ایفای نقش به عنوان یک شریک اجرایی حیاتی برای مدیرعامل، هیئت مدیره و ذینفعان خارجی.",
    hardSkills: [
      "رهبری فنی در سطح شرکت - چشم‌انداز فنی شرکت: تعریف و قهرمانی استراتژی بلندمدت فناوری و پلتفرم شرکت",
      "رهبری فنی در سطح شرکت - هم‌راستایی فناوری/کسب‌وکار: پیشبرد سرمایه‌گذاری‌های فنی که تأثیر کسب‌وکار را به حداکثر می‌رساند",
      "رهبری فنی در سطح شرکت - معماری جهانی: نظارت بر معماری برای همه محصولات، پلتفرم‌ها و مناطق",
      "رهبری فنی در سطح شرکت - بررسی فنی (due diligence): رهبری بررسی‌های فنی M&A, IPO و ارزیابی‌های سرمایه‌گذاری",
      "رهبری فنی در سطح شرکت - R&D و نوآوری: حمایت و راهنمایی R&D پیشگامانه و کاوش فناوری جدید",
      "سازمان، استعداد و فرهنگ - طراحی سازمانی: ساختاردهی و مقیاس‌دهی تیم‌های مهندسی، SRE, DevOps و پلتفرم در کلاس جهانی",
      "سازمان، استعداد و فرهنگ - خط لوله رهبری: جذب، منتور کردن و حفظ رهبران فنی استثنایی",
      "سازمان، استعداد و فرهنگ - تنوع، برابری، فراگیری: تعیین و حمایت از استانداردهای تیم‌های فراگیر و با عملکرد بالا",
      "سازمان، استعداد و فرهنگ - برند استعداد: موقعیت‌یابی شرکت به عنوان مقصدی برتر برای استعدادهای مهندسی",
      "سازمان، استعداد و فرهنگ - تغییر و تحول سازمانی: رهبری چرخش‌های سازمانی، تحول دیجیتال و تغییر فرهنگ",
      "چشم‌انداز پلتفرم، محصول و فول-استک - محصول‌سازی پلتفرم: راهنمایی در ایجاد پلتفرم‌ها/APIهای داخلی و خارجی به عنوان محصول",
      "چشم‌انداز پلتفرم، محصول و فول-استک - معماری فول-استک: نظارت بر معماری سرتاسری: بک‌اند، فرانت‌اند، موبایل و داده",
      "چشم‌انداز پلتفرم، محصول و فول-استک - روندهای بازار و فناوری: پیش‌بینی، ارزیابی و پذیرش فناوری‌ها و پارادایم‌های نوظهور",
      "چشم‌انداز پلتفرم، محصول و فول-استک - متن-باز و اکوسیستم: رهبری استراتژی متن-باز و مشارکت جامعه شرکت",
      "چشم‌انداز پلتفرم، محصول و فول-استک - مقیاس‌پذیری و قابلیت اطمینان جهانی: اطمینان از اینکه پلتفرم می‌تواند به صورت جهانی با دسترسی‌پذیری بالا مقیاس شود",
      "ساختمان داده، الگوریتم‌ها و سیستم‌ها - نوآوری الگوریتمی: حمایت از تحقیق و پذیرش DSA پیشرفته برای مزیت کسب‌وکار",
      "ساختمان داده، الگوریتم‌ها و سیستم‌ها - استراتژی پلتفرم داده: نظارت بر استراتژی برای داده‌های بزرگ، AI/ML، تحلیل‌ها و انطباق",
      "ساختمان داده، الگوریتم‌ها و سیستم‌ها - ریسک و امنیت سیستمی: تعیین استانداردهای شرکتی برای تاب‌آوری، حریم خصوصی و امنیت",
      "ارتباطات سرویس، پایگاه داده و پیام‌رسانی - استراتژی API و داده: نظارت بر جهت‌گیری پلتفرم API داخلی و خارجی",
      "ارتباطات سرویس، پایگاه داده و پیام‌رسانی - چشم‌انداز پایگاه داده/پیام‌رسانی: تعیین استانداردها برای همه پایگاه‌های داده، پیام‌رسانی و معماری‌های رویداد-محور",
      "ارتباطات سرویس، پایگاه داده و پیام‌رسانی - حاکمیت داده: تضمین انطباق، حاکمیت داده و سیاست داده جهانی",
      "ارتباطات سرویس، پایگاه داده و پیام‌رسانی - مدیریت فروشندگان و اکوسیستم: مذاکره شراکت‌های استراتژیک، اتحادها و تدارکات فناوری",
      "رهبری اجرایی فول-استک و محصول - چشم‌انداز محصول سرتاسری: پیشبرد استراتژی محصول و مهندسی برای همه تجربیات کاربر و مشتری",
      "رهبری اجرایی فول-استک و محصول - همکاری با مدیر ارشد محصول/مدیرعامل: شکل دادن به مدل‌های کسب‌وکار، درآمدزایی و تناسب محصول-بازار",
      "رهبری اجرایی فول-استک و محصول - قابلیت توسعه پلتفرم: حمایت از معماری‌ها برای یکپارچه‌سازی‌های شخص ثالث و رشد اکوسیستم",
      "رهبری اجرایی فول-استک و محصول - سرمایه‌گذاری در DX/UX: قهرمانی تجربه توسعه‌دهنده و کاربر به عنوان تمایزهای کسب‌وکار",
      "DevOps، امنیت و انطباق - چشم‌انداز ابر و زیرساخت: رهبری هیبرید/چند-ابری، بهینه‌سازی هزینه و نوآوری زیرساخت",
      "DevOps، امنیت و انطباق - امنیت و انطباق: پاسخگویی نهایی برای ریسک فنی و وضعیت انطباق شرکت",
      "DevOps، امنیت و انطباق - بازیابی فاجعه: نظارت بر BCP, DR جهانی و پاسخ به حوادث با شدت بالا",
      "حضور اجرایی و تأثیر خارجی - روابط با هیئت مدیره و سرمایه‌گذاران: ارائه چشم‌انداز فنی، ریسک‌ها و پیروزی‌ها به هیئت مدیره/سرمایه‌گذاران",
      "حضور اجرایی و تأثیر خارجی - رهبری صنعت: نمایندگی شرکت در رویدادهای صنعتی، رسانه‌ها و نهادهای استاندارد",
      "حضور اجرایی و تأثیر خارجی - آمادگی برای M&A/IPO: رهبری جریان‌های کاری فنی برای ادغام‌ها، خریدها و عرضه‌های عمومی",
      "حضور اجرایی و تأثیر خارجی - حمایت از فناوری: موقعیت‌یابی شرکت به عنوان یک رهبر فکری در جامعه فنی",
    ],
    softSkills: [
      "داستان‌سرایی چشم‌انداز: بیان و الهام‌بخشی در مورد آینده بلندمدت فناوری",
      "نفوذ اجرایی: هم‌راستا کردن و مذاکره در سطح هیئت مدیره، C-level و بازار",
      "تصمیم‌گیری استراتژیک: اتخاذ و دفاع از شرط‌بندی‌های فنی جسورانه و پرمخاطره",
      "توانمندسازی و جانشین‌پروری: توسعه رهبرانی که می‌توانند سازمان فنی را مقیاس‌دهی و حفظ کنند",
      "رهبری بحران: هدایت شرکت در بحران‌های فنی با تأثیر بالا و تغییرات بازار",
    ],
    responsibilities: [
      "چشم‌انداز فنی شرکت را تعریف می‌کند، تحول و نوآوری را رهبری می‌کند.",
    ],
    roadmap: {
      months: [
        "ماه‌های ۱-۳: حسابرسی و تعریف چشم‌انداز فنی و پلتفرم بلندمدت",
        "ماه‌های ۱-۳: ساختاردهی تیم اجرایی و تعیین استراتژی برند استعداد",
        "ماه‌های ۱-۳: ساختن روابط اجرایی با هیئت مدیره، محصول و کسب‌وکار",
        "ماه‌های ۴-۶: نظارت بر تحول دیجیتال یا ابتکار پلتفرم بزرگ",
        "ماه‌های ۴-۶: حمایت از مشارکت در متن-باز/جامعه و سرمایه‌گذاری‌های R&D",
        "ماه‌های ۷-۱۲+: رهبری جریان‌های کاری فنی برای M&A یا IPO در صورت نیاز",
        "ماه‌های ۷-۱۲+: راه‌اندازی برنامه‌های DX/UX و تغییر فرهنگ در سطح سازمان",
        "ماه‌های ۷-۱۲+: ارائه رهبری فکری در رویدادهای صنعتی و رسانه‌ها",
      ],
      goals: [],
    },
    practicalTasks: [
      "یک چشم‌انداز فناوری و پلتفرم ۵ ساله را به هیئت مدیره و سرمایه‌گذاران توسعه و ارائه دهید",
      "بررسی فنی و ادغام پس از خرید برای یک خرید بزرگ را رهبری کنید",
      "بر تحول دیجیتال جهانی (مثلاً مهاجرت به ابر، پلتفرم‌سازی) نظارت کنید",
      "از ابتکارات R&D و متن-باز که موقعیت بازار شرکت را ارتقا می‌دهند حمایت کنید",
      "مدیریت تغییر در سطح سازمان را برای مدل‌های کسب‌وکار یا چرخش‌های جدید پیش ببرید",
    ],
    quizzes: [
      "چگونه بین ثبات پلتفرم اصلی و نوآوری مخرب تعادل برقرار می‌کنید؟",
      "رویکرد شما برای تنظیم و تعدیل طراحی سازمانی برای رشد سریع چیست؟",
      "چگونه از هم‌راستایی بین استراتژی فنی، محصول و کسب‌وکار اطمینان حاصل می‌کنید؟",
      "چگونه ریسک فنی سیستمی را در مقیاس جهانی ارزیابی و کاهش می‌دهید؟",
      "چارچوب شما برای نمایندگی چشم‌انداز فنی شرکت در خارج چیست؟",
    ],
    timeEstimate: { fullTime: "۳۶-۶۰ ماه", partTime: "۴۸-۷۲ ماه" },
  },
];
